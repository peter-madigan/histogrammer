# Generates the necessary histograms for the Module 0 muon capture analysis
entry-list:
  #all: [
  #  ev_id, ev_unix, ev_pps_start, ev_pps_end,  
  #  mip_score, proton_score, profile_mip_mcs_score_mean, profile_proton_mcs_score_mean,
  #  tagged_energy, tagged_nhit, bkg_nhit, muon_theta, muon_phi, muon_eta,
  #  cos_theta, muon_t, muon_q, muon_n, start_x, start_y, start_z, stop_x, stop_y, stop_z,
  #  michel_stop_x, michel_stop_y, michel_stop_z,    
  #  prompt_ampl, prompt_sum, prompt_sum_res, prompt_acc, delayed_time, delayed_sum, delayed_ampl, delayed_acc,
  #  prompt_acc_ch, delayed_acc_ch, max_light_dt, imin_align_ns_nan, align_sample_idx_nan,
  #  prompt_sum_ch, delayed_sum_ch, prompt_ampl_ch, delayed_ampl_ch, prompt_pca_terms,
  #  through_going_muon_range, through_going,
  #  true_michel, true_michel_plus, true_michel_minus, true_capt,
  #  true_bkg_proton, true_bkg_nonstop_muon, true_bkg_stop_muon, true_bkg_neutron, true_bkg_pion, true_bkg_shower, true_bkg_other,
  #  true_muon_de, true_muon_charge, true_muon_light,
  #  true_michel_ke, true_michel_de, true_michel_charge, true_michel_light, true_delay,
  #  true_stop_x, true_stop_y, true_stop_z
  #  ]
  short_stopping_michel: [
    ev_id, ev_unix, ev_pps_start, ev_pps_end,
    mip_score, proton_score, profile_mip_mcs_score_mean, profile_proton_mcs_score_mean,
    tagged_energy, tagged_nhit, bkg_nhit, muon_theta, muon_phi, muon_eta,
    cos_theta, muon_t, muon_q, muon_n, start_x, start_y, start_z, stop_x, stop_y, stop_z,
    michel_stop_x, michel_stop_y, michel_stop_z,
    prompt_ampl, prompt_sum, prompt_sum_res, prompt_acc, delayed_time, delayed_sum, delayed_ampl, delayed_acc,
    prompt_acc_ch, delayed_acc_ch, max_light_dt, imin_align_ns_nan, align_sample_idx_nan,
    prompt_sum_ch, delayed_sum_ch, prompt_ampl_ch, delayed_ampl_ch, prompt_pca_terms,
    through_going_muon_range, through_going,
    swvfm_data_aligned,
    true_michel, true_michel_plus, true_michel_minus, true_capt,
    true_bkg_proton, true_bkg_nonstop_muon, true_bkg_stop_muon, true_bkg_neutron, true_bkg_pion, true_bkg_shower, true_bkg_other,
    true_muon_de, true_muon_charge, true_muon_light,
    true_michel_ke, true_michel_de, true_michel_charge, true_michel_light, true_delay,
    true_stop_x, true_stop_y, true_stop_z
    ]
  reco_muon_veto: [
    ev_id, ev_unix, ev_pps_start, ev_pps_end,  
    mip_score, proton_score, profile_mip_mcs_score_mean, profile_proton_mcs_score_mean,
    tagged_energy, tagged_nhit, bkg_nhit, muon_theta, muon_phi, muon_eta,
    cos_theta, muon_t, muon_q, muon_n, start_x, start_y, start_z, stop_x, stop_y, stop_z,
    michel_stop_x, michel_stop_y, michel_stop_z,    
    prompt_ampl, prompt_sum, prompt_sum_res, prompt_acc, delayed_time, delayed_sum, delayed_ampl, delayed_acc,
    prompt_acc_ch, delayed_acc_ch, max_light_dt, imin_align_ns_nan, align_sample_idx_nan,
    prompt_sum_ch, delayed_sum_ch, prompt_ampl_ch, delayed_ampl_ch, prompt_pca_terms,
    through_going_muon_range, through_going,
    true_michel, true_michel_plus, true_michel_minus, true_capt,
    true_bkg_proton, true_bkg_nonstop_muon, true_bkg_stop_muon, true_bkg_neutron, true_bkg_pion, true_bkg_shower, true_bkg_other,
    true_muon_de, true_muon_charge, true_muon_light,
    true_michel_ke, true_michel_de, true_michel_charge, true_michel_light, true_delay,
    true_stop_x, true_stop_y, true_stop_z
    ]
  reco_michel: [
    ev_id, ev_unix, ev_pps_start, ev_pps_end,  
    mip_score, proton_score, profile_mip_mcs_score_mean, profile_proton_mcs_score_mean,
    tagged_energy, tagged_nhit, bkg_nhit, muon_theta, muon_phi, muon_eta,
    cos_theta, muon_t, muon_q, muon_n, start_x, start_y, start_z, stop_x, stop_y, stop_z,
    michel_stop_x, michel_stop_y, michel_stop_z,    
    prompt_ampl, prompt_sum, prompt_sum_res, prompt_acc, delayed_time, delayed_sum, delayed_ampl, delayed_acc,
    prompt_acc_ch, delayed_acc_ch, max_light_dt, imin_align_ns_nan, align_sample_idx_nan,
    prompt_sum_ch, delayed_sum_ch, prompt_ampl_ch, delayed_ampl_ch, prompt_pca_terms,
    through_going_muon_range, through_going,
    true_michel, true_michel_plus, true_michel_minus, true_capt,
    true_bkg_proton, true_bkg_nonstop_muon, true_bkg_stop_muon, true_bkg_neutron, true_bkg_pion, true_bkg_shower, true_bkg_other,
    true_muon_de, true_muon_charge, true_muon_light,
    true_michel_ke, true_michel_de, true_michel_charge, true_michel_light, true_delay,
    true_stop_x, true_stop_y, true_stop_z,
    ]    
  reco_michel_light: [
    ev_id, ev_unix, ev_pps_start, ev_pps_end,
    reco_michel_light_true_michel,
    mip_score, proton_score, profile_mip_mcs_score_mean, profile_proton_mcs_score_mean,
    tagged_energy, tagged_nhit, bkg_nhit, muon_theta, muon_phi, muon_eta,
    cos_theta, muon_t, muon_q, muon_n, start_x, start_y, start_z, stop_x, stop_y, stop_z,
    michel_stop_x, michel_stop_y, michel_stop_z,    
    prompt_ampl, prompt_sum, prompt_sum_res, prompt_acc, delayed_time, delayed_sum, delayed_ampl, delayed_acc,
    prompt_sum_ch, delayed_sum_ch, prompt_ampl_ch, delayed_ampl_ch, prompt_pca_terms,
    prompt_acc_ch, delayed_acc_ch, max_light_dt, imin_align_ns_nan, align_sample_idx_nan,
    through_going_muon_range, through_going,
    true_michel, true_michel_plus, true_michel_minus, true_capt, poor_reco,
    true_bkg_proton, true_bkg_nonstop_muon, true_bkg_stop_muon, true_bkg_neutron, true_bkg_pion, true_bkg_shower, true_bkg_other,
    true_muon_de, true_muon_charge, true_muon_light,
    true_michel_ke, true_michel_de, true_michel_charge, true_michel_light, true_delay,
    true_stop_x, true_stop_y, true_stop_z,
    ]
  mip_sideband: [
    ev_id, ev_unix, ev_pps_start, ev_pps_end,  
    mip_score, proton_score, profile_mip_mcs_score_mean, profile_proton_mcs_score_mean,
    tagged_energy, tagged_nhit, bkg_nhit, muon_theta, muon_phi, muon_eta,
    cos_theta, muon_t, muon_q, muon_n, start_x, start_y, start_z, stop_x, stop_y, stop_z,
    michel_stop_x, michel_stop_y, michel_stop_z,    
    prompt_ampl, prompt_sum, prompt_sum_res, prompt_acc, delayed_time, delayed_sum, delayed_ampl, delayed_acc,
    prompt_sum_ch, delayed_sum_ch, prompt_ampl_ch, delayed_ampl_ch, prompt_pca_terms,
    prompt_acc_ch, delayed_acc_ch, max_light_dt, imin_align_ns_nan, align_sample_idx_nan,
    through_going_muon_range, through_going,
    true_michel, true_michel_plus, true_michel_minus, true_capt,
    true_bkg_proton, true_bkg_nonstop_muon, true_bkg_stop_muon, true_bkg_neutron, true_bkg_pion, true_bkg_shower, true_bkg_other,
    true_muon_de, true_muon_charge, true_muon_light,
    true_michel_ke, true_michel_de, true_michel_charge, true_michel_light, true_delay,
    true_stop_x, true_stop_y, true_stop_z,
    ]
  mip_sideband_light: [
    ev_id, ev_unix, ev_pps_start, ev_pps_end,  
    mip_score, proton_score, profile_mip_mcs_score_mean, profile_proton_mcs_score_mean,
    tagged_energy, tagged_nhit, bkg_nhit, muon_theta, muon_phi, muon_eta,
    cos_theta, muon_t, muon_q, muon_n, start_x, start_y, start_z, stop_x, stop_y, stop_z,
    michel_stop_x, michel_stop_y, michel_stop_z,    
    prompt_ampl, prompt_sum, prompt_sum_res, prompt_acc, delayed_time, delayed_sum, delayed_ampl, delayed_acc,
    prompt_sum_ch, delayed_sum_ch, prompt_ampl_ch, delayed_ampl_ch, prompt_pca_terms,
    prompt_acc_ch, delayed_acc_ch, max_light_dt, imin_align_ns_nan, align_sample_idx_nan,
    through_going_muon_range, through_going,
    true_michel, true_michel_plus, true_michel_minus, true_capt,
    true_bkg_proton, true_bkg_nonstop_muon, true_bkg_stop_muon, true_bkg_neutron, true_bkg_pion, true_bkg_shower, true_bkg_other,
    true_muon_de, true_muon_charge, true_muon_light,
    true_michel_ke, true_michel_de, true_michel_charge, true_michel_light, true_delay,
    true_stop_x, true_stop_y, true_stop_z,
    ]    


event-list:
  - reco_muon_veto
  - reco_michel_light
  - hand_scan7
  - hand_scan9

import:
  - numpy
  - numpy.ma
  - scipy
  - scipy.interpolate
  - scipy.stats

constants:
  light_samples:
    attr: True
    path: run_info
    name: light_samples

  thresholds:
    attr: True
    path: run_info
    name: charge_thresholds

  boundary_samples:
    attr: True
    path: analysis/time_reco/delayed
    name: edge_effect_window

  sample_rate:
    attr: True
    path: run_info
    name: lrs_ticks

  muon_range:
    attr: True
    path: particle_info
    name: muon_range

  muon_t:
    attr: True
    path: particle_info
    name: muon_t

  muon_dedx:
    attr: True
    path: particle_info
    name: muon_dedx

  muon_range_table:
    expr: "scipy.interpolate.UnivariateSpline(muon_range, muon_t)"

  muon_dedx_table:
    expr: "scipy.interpolate.UnivariateSpline(muon_range, muon_dedx)"

  run:
    expr: "2 if (thresholds == 'high' and int(light_samples) == 1024) else 1"

  is_mc:
    attr: True
    path: run_info
    name: is_mc

  light_rescale: # overall scale factor for light signals (constrained by prompt sum for stopping muon)
    expr: "0.815007 if is_mc and run == 2 else 1"

  light_smear: # smearing parameters to improve data/sim agreement
    expr: "numpy.load('light_smear-v0.0.npy') * (0 if not is_mc else 1)"
  light_smear_bias: # smearing model bias (per detector)
    expr: "(0 if not is_mc else (-0.1395 if run == 1 else 0.057242))"

  print0:
    expr: "print(input_filepath, run, thresholds, light_samples, is_mc, light_rescale, light_smear.shape, light_smear_bias)"


datasets:
  prompt:
    path: [analysis/time_reco/prompt]
  delayed:
    path: [analysis/time_reco/delayed]
  fit:
    path: [analysis/time_reco/fit]
  michel_label:
    path: [analysis/michel_id/michel_label]
  bkg_label:
    path: [analysis/michel_id/bkg_label]    
  stop_label:
    path: [analysis/stopping_muons/event_sel_reco]
  profile:
    path: [analysis/stopping_muons/event_profile]
  capture_truth:
    path: [analysis/muon_capture/truth_labels]
  stopping_track:
    path: [analysis/muon_capture/truth_labels/stopping_track, mc_truth/tracks]
  michel_track:
    path: [analysis/muon_capture/truth_labels/michel_track, mc_truth/tracks]
  stop_truth:
    path: [analysis/stopping_muons/event_sel_truth]
  #traj_all:
  #  path: [charge/raw_events, mc_truth/events, mc_truth/trajectories]
  charge_events:
     path: [charge/events]
     loop: True    
  light_events:
     path: [charge/events, light/events]
  #swvfm:
  #   path: [charge/events, light/events, light/swvfm]
  #align:
  #   path: [charge/events, light/events, light/swvfm/alignment]
  #reco_tracks:
  #   path: [charge/events, combined/tracklets/merged]


histograms:
  max_light_dt:
    variable: max_light_dt
    bins: {low: 0, high: 15000, n: 150} # ns

  #remaining_e:
  #  variable: stop_label
  #  field: remaining_e
  #  bins: {low: -1000, high: 100000, n: 101} # keV

  #remaining_e_log:
  #  variable: stop_label
  #  field: remaining_e
  #  bins: {low: 1, high: 1.0e+10, n: 101, log: True} # keV

  #max_dqdx:
  #  variable: stop_label
  #  field: max_dqdx
  #  bins: {low: 0, high: 50000, n: 200} # e/mm

  #veto_q:
  #  variable: stop_label
  #  field: veto_q
  #  bins: {low: 0, high: 200000, n: 200} # e

  #veto_q_log:
  #  variable: stop_label
  #  field: veto_q
  #  bins: {low: 1, high: 20000000, n: 200, log: True} # e

  mip_score:
    variable: mip_score
    bins: {low: -2, high: 2, n: 300}

  proton_score:
    variable: proton_score
    bins: {low: -1, high: 1, n: 300}

  #mip_dqdx_score:
  #  variable: profile_mip_dqdx_score
  #  bins: {low: -50, high: 5, n: 300}

  #proton_dqdx_score:
  #  variable: profile_proton_dqdx_score
  #  bins: {low: -30, high: 30, n: 300}

  #mip_mcs_score:
  #  variable: profile_mip_mcs_score
  #  bins: {low: -100, high: 2, n: 300}

  #proton_mcs_score:
  #  variable: profile_proton_mcs_score
  #  bins: {low: -100, high: 2, n: 300}

  mip_dqdx_score_mean:
    variable: profile_mip_dqdx_score_mean
    bins: {low: -3, high: 1, n: 400}

  proton_dqdx_score_mean:
    variable: profile_proton_dqdx_score_mean
    bins: {low: -3, high: 1, n: 400}

  mip_mcs_score_mean:
    variable: profile_mip_mcs_score_mean
    bins: {low: -3, high: 1, n: 400}

  proton_mcs_score_mean:
    variable: profile_proton_mcs_score_mean
    bins: {low: -3, high: 1, n: 400}

  tagged_energy:
    variable: michel_label
    field: michel_e
    bins: {low: 0, high: 100000, n: 50} # keV

  #tagged_energy_smear:
  #  variable: michel_e_smear
  #  bins: {low: 0, high: 100000, n: 50} # keV

  tagged_nhit:
    variable: tagged_nhit
    bins: {low: 0, high: 250, n: 125}

  bkg_nhit:
    variable: bkg_nhit
    bins: {low: 0, high: 250, n: 125}

  bkg_nhit_x_cos_theta:
    variable: bkg_nhit_x_cos_theta
    bins: {low: -250, high: 250, n: 250}

  bkg_nhit_v_cos_theta:
    variable: [bkg_nhit, cos_theta]
    bins:
        - {low: 0, high: 250, n: 125}
        - {low: -1, high: 1, n: 500}

  #tagged_nhit_rescale:
  #  variable: tagged_nhit_rescale
  #  bins: {low: 0, high: 250, n: 125}

  muon_t:
    variable: muon_t
    bins: {low: 0, high: 500000, n: 51}

  #muon_range:
  #  variable: muon_range
  #  bins: {low: 0, high: 1500, n: 51}

  muon_t_v_prompt_sum:
    variable:
     - prompt_sum
     - muon_t
    bins:
      - {low: 1, high: 5000, n: 100} # pe
      - {low: 0, high: 500000, n: 51} # keV

  muon_t_v_muon_q:
    variable:
     - muon_q
     - muon_t
    bins:
      - {low: 1, high: 15000000, n: 100} # pe
      - {low: 0, high: 500000, n: 51} # keV

  #delayed_sig:
  #  variable: delayed_sig
  #  bins: {low: 10, high: 100000, n: 100, log: True}

  delayed_ampl:
    variable: delayed_ampl
    bins: {low: 1, high: 250, n: 100}

  delayed_sum:
    variable: delayed_sum
    bins: {low: 1, high: 500, n: 100}

  delayed_sum_smear:
    variable: delayed_sum_smear
    bins: {low: 1, high: 500, n: 100}

  prompt_factor:
    variable: prompt_factor
    bins: {low: 1, high: 2000, n: 100}

  prompt_ampl:
    variable: prompt_ampl
    bins: {low: 1, high: 1500, n: 100}

  prompt_sum:
    variable: prompt_sum
    bins: {low: 1, high: 3000, n: 100}

  delayed_time:
    variable: delayed_time
    bins: [0.00e+00, 4.00e+01, 8.00e+01, 1.20e+02, 1.60e+02, 2.00e+02, 2.40e+02, 2.80e+02, 3.20e+02, 3.60e+02, 4.00e+02, 4.40e+02, 4.80e+02, 5.20e+02, 5.60e+02, 6.00e+02, 6.40e+02, 6.80e+02, 7.20e+02, 7.60e+02, 8.00e+02, 8.40e+02, 8.80e+02, 9.20e+02, 9.60e+02, 1.00e+03, 1.04e+03, 1.08e+03, 1.12e+03, 1.16e+03, 1.20e+03, 1.24e+03, 1.28e+03, 1.32e+03, 1.36e+03, 1.40e+03, 1.44e+03, 1.48e+03, 1.52e+03, 1.56e+03, 1.60e+03, 1.64e+03, 1.68e+03, 1.72e+03, 1.76e+03, 1.80e+03, 1.84e+03, 1.88e+03, 1.92e+03, 1.96e+03, 2.00e+03, 2.04e+03, 2.11e+03, 2.18e+03, 2.25e+03, 2.32e+03, 2.40e+03, 2.48e+03, 2.56e+03, 2.64e+03, 2.73e+03, 2.82e+03, 2.91e+03, 3.01e+03, 3.11e+03, 3.21e+03, 3.32e+03, 3.43e+03, 3.54e+03, 3.66e+03, 3.78e+03, 3.90e+03, 4.03e+03, 4.16e+03, 4.30e+03, 4.44e+03, 4.59e+03, 4.74e+03, 4.90e+03, 5.06e+03, 5.23e+03, 5.40e+03, 5.58e+03, 5.76e+03, 5.95e+03, 6.15e+03, 6.35e+03, 6.56e+03, 6.78e+03, 7.00e+03, 7.23e+03, 7.47e+03, 7.71e+03, 7.97e+03, 8.23e+03, 8.50e+03, 8.78e+03, 9.07e+03, 9.37e+03, 9.68e+03, 1.00e+04]

  delayed_time_rebin:
    variable: delayed_time
    bins: {low: 0, high: 10.0e+3, n: 250}

  #singlet_fraction:
  #  variable: fit
  #  field: fraction
  #  bins: {low: 0, high: 1, n: 100}

  #tau_t:
  #  variable: fit
  #  field: tau_t
  #  bins: {low: 0, high: 1600, n: 200} # ns

  true_delay:
    variable: true_delay
    bins: [0.00e+00, 4.00e+01, 8.00e+01, 1.20e+02, 1.60e+02, 2.00e+02, 2.40e+02, 2.80e+02, 3.20e+02, 3.60e+02, 4.00e+02, 4.40e+02, 4.80e+02, 5.20e+02, 5.60e+02, 6.00e+02, 6.40e+02, 6.80e+02, 7.20e+02, 7.60e+02, 8.00e+02, 8.40e+02, 8.80e+02, 9.20e+02, 9.60e+02, 1.00e+03, 1.04e+03, 1.08e+03, 1.12e+03, 1.16e+03, 1.20e+03, 1.24e+03, 1.28e+03, 1.32e+03, 1.36e+03, 1.40e+03, 1.44e+03, 1.48e+03, 1.52e+03, 1.56e+03, 1.60e+03, 1.64e+03, 1.68e+03, 1.72e+03, 1.76e+03, 1.80e+03, 1.84e+03, 1.88e+03, 1.92e+03, 1.96e+03, 2.00e+03, 2.04e+03, 2.11e+03, 2.18e+03, 2.25e+03, 2.32e+03, 2.40e+03, 2.48e+03, 2.56e+03, 2.64e+03, 2.73e+03, 2.82e+03, 2.91e+03, 3.01e+03, 3.11e+03, 3.21e+03, 3.32e+03, 3.43e+03, 3.54e+03, 3.66e+03, 3.78e+03, 3.90e+03, 4.03e+03, 4.16e+03, 4.30e+03, 4.44e+03, 4.59e+03, 4.74e+03, 4.90e+03, 5.06e+03, 5.23e+03, 5.40e+03, 5.58e+03, 5.76e+03, 5.95e+03, 6.15e+03, 6.35e+03, 6.56e+03, 6.78e+03, 7.00e+03, 7.23e+03, 7.47e+03, 7.71e+03, 7.97e+03, 8.23e+03, 8.50e+03, 8.78e+03, 9.07e+03, 9.37e+03, 9.68e+03, 1.00e+04]
    
  true_delay_rebin:
    variable: true_delay
    bins: {low: 0, high: 10.0e+3, n: 250}
    
  true_michel_de:
    variable: true_michel_de
    bins: {low: 0, high: 50.0e+3, n: 100}

  prompt_sum_v_delayed_sum:
    variable: [delayed_sum, prompt_sum]
    bins:
     - {low: 1, high: 500, n: 100, log: True}
     - {low: 1, high: 5000, n: 100, log: True}

  prompt_ampl_v_delayed_ampl:
    variable: [delayed_ampl, prompt_ampl]
    bins:
     - {low: 1, high: 500, n: 100, log: True}
     - {low: 1, high: 5000, n: 100, log: True}

  delayed_sum_v_delayed_ampl:
    variable: [delayed_ampl, delayed_sum]
    bins:
     - {low: 1, high: 250, n: 100, log: True}
     - {low: 1, high: 500, n: 100, log: True}

  delayed_time_v_true_delay:
    variable: [delayed_time, true_delay]
    bins:
      - [0.00e+00, 4.00e+01, 8.00e+01, 1.20e+02, 1.60e+02, 2.00e+02, 2.40e+02, 2.80e+02, 3.20e+02, 3.60e+02, 4.00e+02, 4.40e+02, 4.80e+02, 5.20e+02, 5.60e+02, 6.00e+02, 6.40e+02, 6.80e+02, 7.20e+02, 7.60e+02, 8.00e+02, 8.40e+02, 8.80e+02, 9.20e+02, 9.60e+02, 1.00e+03, 1.04e+03, 1.08e+03, 1.12e+03, 1.16e+03, 1.20e+03, 1.24e+03, 1.28e+03, 1.32e+03, 1.36e+03, 1.40e+03, 1.44e+03, 1.48e+03, 1.52e+03, 1.56e+03, 1.60e+03, 1.64e+03, 1.68e+03, 1.72e+03, 1.76e+03, 1.80e+03, 1.84e+03, 1.88e+03, 1.92e+03, 1.96e+03, 2.00e+03, 2.04e+03, 2.11e+03, 2.18e+03, 2.25e+03, 2.32e+03, 2.40e+03, 2.48e+03, 2.56e+03, 2.64e+03, 2.73e+03, 2.82e+03, 2.91e+03, 3.01e+03, 3.11e+03, 3.21e+03, 3.32e+03, 3.43e+03, 3.54e+03, 3.66e+03, 3.78e+03, 3.90e+03, 4.03e+03, 4.16e+03, 4.30e+03, 4.44e+03, 4.59e+03, 4.74e+03, 4.90e+03, 5.06e+03, 5.23e+03, 5.40e+03, 5.58e+03, 5.76e+03, 5.95e+03, 6.15e+03, 6.35e+03, 6.56e+03, 6.78e+03, 7.00e+03, 7.23e+03, 7.47e+03, 7.71e+03, 7.97e+03, 8.23e+03, 8.50e+03, 8.78e+03, 9.07e+03, 9.37e+03, 9.68e+03, 1.00e+04]
      - [0.00e+00, 4.00e+01, 8.00e+01, 1.20e+02, 1.60e+02, 2.00e+02, 2.40e+02, 2.80e+02, 3.20e+02, 3.60e+02, 4.00e+02, 4.40e+02, 4.80e+02, 5.20e+02, 5.60e+02, 6.00e+02, 6.40e+02, 6.80e+02, 7.20e+02, 7.60e+02, 8.00e+02, 8.40e+02, 8.80e+02, 9.20e+02, 9.60e+02, 1.00e+03, 1.04e+03, 1.08e+03, 1.12e+03, 1.16e+03, 1.20e+03, 1.24e+03, 1.28e+03, 1.32e+03, 1.36e+03, 1.40e+03, 1.44e+03, 1.48e+03, 1.52e+03, 1.56e+03, 1.60e+03, 1.64e+03, 1.68e+03, 1.72e+03, 1.76e+03, 1.80e+03, 1.84e+03, 1.88e+03, 1.92e+03, 1.96e+03, 2.00e+03, 2.04e+03, 2.11e+03, 2.18e+03, 2.25e+03, 2.32e+03, 2.40e+03, 2.48e+03, 2.56e+03, 2.64e+03, 2.73e+03, 2.82e+03, 2.91e+03, 3.01e+03, 3.11e+03, 3.21e+03, 3.32e+03, 3.43e+03, 3.54e+03, 3.66e+03, 3.78e+03, 3.90e+03, 4.03e+03, 4.16e+03, 4.30e+03, 4.44e+03, 4.59e+03, 4.74e+03, 4.90e+03, 5.06e+03, 5.23e+03, 5.40e+03, 5.58e+03, 5.76e+03, 5.95e+03, 6.15e+03, 6.35e+03, 6.56e+03, 6.78e+03, 7.00e+03, 7.23e+03, 7.47e+03, 7.71e+03, 7.97e+03, 8.23e+03, 8.50e+03, 8.78e+03, 9.07e+03, 9.37e+03, 9.68e+03, 1.00e+04]      

  #prompt_energy:
  #  variable: prompt_energy
  #  bins: {low: 1, high: 30000, n: 100, log: True} # pe

  #delayed_energy:
  #  variable: delayed_energy
  #  bins: {low: 1, high: 10000, n: 100, log: True} # pe

  #tagged_energy_v_delayed_energy:
  #  variable:
  #   - delayed_energy
  #   - michel_label
  #  field:
  #   - null
  #   - michel_e
  #  bins:
  #    - {low: 1, high: 10000, n: 100, log: True} # pe
  #    - {low: 0, high: 100000, n: 50} # keV

  #delayed_time_v_delayed_energy:
  #  variable:
  #    - delayed_energy
  #    - fit
  #  field:
  #    - null
  #    - delayed_ns
  #  bins:
  #    - {low: 1, high: 10000, n: 100, log: True} # pe
  #    - [0.00e+00, 4.00e+01, 8.00e+01, 1.20e+02, 1.60e+02, 2.00e+02, 2.40e+02, 2.80e+02, 3.20e+02, 3.60e+02, 4.00e+02, 4.40e+02, 4.80e+02, 5.20e+02, 5.60e+02, 6.00e+02, 6.40e+02, 6.80e+02, 7.20e+02, 7.60e+02, 8.00e+02, 8.40e+02, 8.80e+02, 9.20e+02, 9.60e+02, 1.00e+03, 1.04e+03, 1.08e+03, 1.12e+03, 1.16e+03, 1.20e+03, 1.24e+03, 1.28e+03, 1.32e+03, 1.36e+03, 1.40e+03, 1.44e+03, 1.48e+03, 1.52e+03, 1.56e+03, 1.60e+03, 1.64e+03, 1.68e+03, 1.72e+03, 1.76e+03, 1.80e+03, 1.84e+03, 1.88e+03, 1.92e+03, 1.96e+03, 2.00e+03, 2.04e+03, 2.11e+03, 2.18e+03, 2.25e+03, 2.32e+03, 2.40e+03, 2.48e+03, 2.56e+03, 2.64e+03, 2.73e+03, 2.82e+03, 2.91e+03, 3.01e+03, 3.11e+03, 3.21e+03, 3.32e+03, 3.43e+03, 3.54e+03, 3.66e+03, 3.78e+03, 3.90e+03, 4.03e+03, 4.16e+03, 4.30e+03, 4.44e+03, 4.59e+03, 4.74e+03, 4.90e+03, 5.06e+03, 5.23e+03, 5.40e+03, 5.58e+03, 5.76e+03, 5.95e+03, 6.15e+03, 6.35e+03, 6.56e+03, 6.78e+03, 7.00e+03, 7.23e+03, 7.47e+03, 7.71e+03, 7.97e+03, 8.23e+03, 8.50e+03, 8.78e+03, 9.07e+03, 9.37e+03, 9.68e+03, 1.00e+04]      

  delayed_time_v_delayed_sum:
    variable:
      - delayed_sum
      - fit
    field:
      - null
      - delayed_ns
    bins:
      - {low: 1, high: 500, n: 100, log: True}
      - [0.00e+00, 4.00e+01, 8.00e+01, 1.20e+02, 1.60e+02, 2.00e+02, 2.40e+02, 2.80e+02, 3.20e+02, 3.60e+02, 4.00e+02, 4.40e+02, 4.80e+02, 5.20e+02, 5.60e+02, 6.00e+02, 6.40e+02, 6.80e+02, 7.20e+02, 7.60e+02, 8.00e+02, 8.40e+02, 8.80e+02, 9.20e+02, 9.60e+02, 1.00e+03, 1.04e+03, 1.08e+03, 1.12e+03, 1.16e+03, 1.20e+03, 1.24e+03, 1.28e+03, 1.32e+03, 1.36e+03, 1.40e+03, 1.44e+03, 1.48e+03, 1.52e+03, 1.56e+03, 1.60e+03, 1.64e+03, 1.68e+03, 1.72e+03, 1.76e+03, 1.80e+03, 1.84e+03, 1.88e+03, 1.92e+03, 1.96e+03, 2.00e+03, 2.04e+03, 2.11e+03, 2.18e+03, 2.25e+03, 2.32e+03, 2.40e+03, 2.48e+03, 2.56e+03, 2.64e+03, 2.73e+03, 2.82e+03, 2.91e+03, 3.01e+03, 3.11e+03, 3.21e+03, 3.32e+03, 3.43e+03, 3.54e+03, 3.66e+03, 3.78e+03, 3.90e+03, 4.03e+03, 4.16e+03, 4.30e+03, 4.44e+03, 4.59e+03, 4.74e+03, 4.90e+03, 5.06e+03, 5.23e+03, 5.40e+03, 5.58e+03, 5.76e+03, 5.95e+03, 6.15e+03, 6.35e+03, 6.56e+03, 6.78e+03, 7.00e+03, 7.23e+03, 7.47e+03, 7.71e+03, 7.97e+03, 8.23e+03, 8.50e+03, 8.78e+03, 9.07e+03, 9.37e+03, 9.68e+03, 1.00e+03]

  delayed_time_v_delayed_ampl:
    variable:
      - delayed_ampl
      - fit
    field:
      - null
      - delayed_ns
    bins:
      - {low: 1, high: 500, n: 100, log: True}
      - [0.00e+00, 4.00e+01, 8.00e+01, 1.20e+02, 1.60e+02, 2.00e+02, 2.40e+02, 2.80e+02, 3.20e+02, 3.60e+02, 4.00e+02, 4.40e+02, 4.80e+02, 5.20e+02, 5.60e+02, 6.00e+02, 6.40e+02, 6.80e+02, 7.20e+02, 7.60e+02, 8.00e+02, 8.40e+02, 8.80e+02, 9.20e+02, 9.60e+02, 1.00e+03, 1.04e+03, 1.08e+03, 1.12e+03, 1.16e+03, 1.20e+03, 1.24e+03, 1.28e+03, 1.32e+03, 1.36e+03, 1.40e+03, 1.44e+03, 1.48e+03, 1.52e+03, 1.56e+03, 1.60e+03, 1.64e+03, 1.68e+03, 1.72e+03, 1.76e+03, 1.80e+03, 1.84e+03, 1.88e+03, 1.92e+03, 1.96e+03, 2.00e+03, 2.04e+03, 2.11e+03, 2.18e+03, 2.25e+03, 2.32e+03, 2.40e+03, 2.48e+03, 2.56e+03, 2.64e+03, 2.73e+03, 2.82e+03, 2.91e+03, 3.01e+03, 3.11e+03, 3.21e+03, 3.32e+03, 3.43e+03, 3.54e+03, 3.66e+03, 3.78e+03, 3.90e+03, 4.03e+03, 4.16e+03, 4.30e+03, 4.44e+03, 4.59e+03, 4.74e+03, 4.90e+03, 5.06e+03, 5.23e+03, 5.40e+03, 5.58e+03, 5.76e+03, 5.95e+03, 6.15e+03, 6.35e+03, 6.56e+03, 6.78e+03, 7.00e+03, 7.23e+03, 7.47e+03, 7.71e+03, 7.97e+03, 8.23e+03, 8.50e+03, 8.78e+03, 9.07e+03, 9.37e+03, 9.68e+03, 1.00e+03]

  cos_theta:
    variable: cos_theta
    bins: {low: -1, high: 1, n: 200}

  cos_theta_zoom:
    variable: cos_theta
    bins: {low: -1, high: -0.9, n: 200}
    
  profile_cos_theta:
    variable: profile_cos
    bins: {low: -1, high: 1, n: 200}

  range_of_first_scatter:
    variable: range_of_first_scatter
    bins: {low: -3000, high: 3000, n: 600}

  muon_theta:
    variable: muon_theta
    bins: {low: -1, high: 1, n: 200}

  prompt_acc:
    variable: prompt_acc
    bins: {low: 0, high: 1, n: 100}

  delayed_acc:
    variable: delayed_acc
    bins: {low: 0, high: 1, n: 100}

  stop_pt:
    variable: [stop_x, stop_y, stop_z, delayed_time]
    bins:
      - {low: -310.38, high: 310.38, n: 2} # mm
      - {low: -620.76, high: 620.76, n: 4} # mm
      - {low: -310, high: 310, n: 4} # mm
      - [0.00e+00, 4.00e+01, 8.00e+01, 1.20e+02, 1.60e+02, 2.00e+02, 2.40e+02, 2.80e+02, 3.20e+02, 3.60e+02, 4.00e+02, 4.40e+02, 4.80e+02, 5.20e+02, 5.60e+02, 6.00e+02, 6.40e+02, 6.80e+02, 7.20e+02, 7.60e+02, 8.00e+02, 8.40e+02, 8.80e+02, 9.20e+02, 9.60e+02, 1.00e+03, 1.04e+03, 1.08e+03, 1.12e+03, 1.16e+03, 1.20e+03, 1.24e+03, 1.28e+03, 1.32e+03, 1.36e+03, 1.40e+03, 1.44e+03, 1.48e+03, 1.52e+03, 1.56e+03, 1.60e+03, 1.64e+03, 1.68e+03, 1.72e+03, 1.76e+03, 1.80e+03, 1.84e+03, 1.88e+03, 1.92e+03, 1.96e+03, 2.00e+03, 2.04e+03, 2.11e+03, 2.18e+03, 2.25e+03, 2.32e+03, 2.40e+03, 2.48e+03, 2.56e+03, 2.64e+03, 2.73e+03, 2.82e+03, 2.91e+03, 3.01e+03, 3.11e+03, 3.21e+03, 3.32e+03, 3.43e+03, 3.54e+03, 3.66e+03, 3.78e+03, 3.90e+03, 4.03e+03, 4.16e+03, 4.30e+03, 4.44e+03, 4.59e+03, 4.74e+03, 4.90e+03, 5.06e+03, 5.23e+03, 5.40e+03, 5.58e+03, 5.76e+03, 5.95e+03, 6.15e+03, 6.35e+03, 6.56e+03, 6.78e+03, 7.00e+03, 7.23e+03, 7.47e+03, 7.71e+03, 7.97e+03, 8.23e+03, 8.50e+03, 8.78e+03, 9.07e+03, 9.37e+03, 9.68e+03, 1.00e+04]

  dedx_xyz:
    variable: [pos_x, pos_y, pos_z, dedx, dqdx]
    bins:
     - {low: -310.38, high: 310.38, n: 4} # mm
     - {low: -620.76, high: 620.76, n: 8} # mm
     - {low: -310, high: 310, n: 4} # mm
     - {low: 40, high: 1000, n: 25} # keV/mm
     - {low: 1000, high: 25000, n: 25} # e/mm

  stop_xy:
    variable: [stop_x, stop_y, stop_z]
    bins:
      - {low: -310.38, high: 310.38, n: 70} # mm
      - {low: -620.76, high: 620.76, n: 140} # mm
      - {low: -310, high: 310, n: 70} # mm

  dqdx:
    variable: [dqdx, rr]
    bins:
      - {low: 0, high: 50.0e+3, n: 100}
      - {low: -30, high: 1500, n: 153}

  dedx:
    variable: [dqdx, dedx]
    bins:
      - {low: 1, high: 50.0e+3, n: 100}
      - {low: 1, high: 2000, n: 100}

  #dqdx_smear:
  #  variable: [dqdx_smear, rr]
  #  bins:
  #    - {low: 0, high: 50.0e+3, n: 100}
  #    - {low: -30, high: 1500, n: 153}

  dndx:
    variable: [dndx, rr]
    bins:
      - {low: 0, high: 2, n: 100}
      - {low: -30, high: 1500, n: 153}
      
  dn:
    variable: [dn, rr]
    bins:
      - {low: 0, high: 25, n: 25}
      - {low: -30, high: 1500, n: 153}      

  dq:
    variable: [dq, rr]
    bins:
      - {low: 0, high: 500000, n: 100}
      - {low: -30, high: 1500, n: 153}      


  dx:
    variable: [dx, rr]
    bins:
      - {low: 0, high: 50, n: 100}
      - {low: -30, high: 1500, n: 153}

  #dead_time:
  #  variable: dead_time # demarks the end of the delayed time window used in search due to waveform boundary
  #  bins: [0.00e+00, 4.00e+01, 8.00e+01, 1.20e+02, 1.60e+02, 2.00e+02, 2.40e+02, 2.80e+02, 3.20e+02, 3.60e+02, 4.00e+02, 4.40e+02, 4.80e+02, 5.20e+02, 5.60e+02, 6.00e+02, 6.40e+02, 6.80e+02, 7.20e+02, 7.60e+02, 8.00e+02, 8.40e+02, 8.80e+02, 9.20e+02, 9.60e+02, 1.00e+03, 1.04e+03, 1.08e+03, 1.12e+03, 1.16e+03, 1.20e+03, 1.24e+03, 1.28e+03, 1.32e+03, 1.36e+03, 1.40e+03, 1.44e+03, 1.48e+03, 1.52e+03, 1.56e+03, 1.60e+03, 1.64e+03, 1.68e+03, 1.72e+03, 1.76e+03, 1.80e+03, 1.84e+03, 1.88e+03, 1.92e+03, 1.96e+03, 2.00e+03, 2.04e+03, 2.11e+03, 2.18e+03, 2.25e+03, 2.32e+03, 2.40e+03, 2.48e+03, 2.56e+03, 2.64e+03, 2.73e+03, 2.82e+03, 2.91e+03, 3.01e+03, 3.11e+03, 3.21e+03, 3.32e+03, 3.43e+03, 3.54e+03, 3.66e+03, 3.78e+03, 3.90e+03, 4.03e+03, 4.16e+03, 4.30e+03, 4.44e+03, 4.59e+03, 4.74e+03, 4.90e+03, 5.06e+03, 5.23e+03, 5.40e+03, 5.58e+03, 5.76e+03, 5.95e+03, 6.15e+03, 6.35e+03, 6.56e+03, 6.78e+03, 7.00e+03, 7.23e+03, 7.47e+03, 7.71e+03, 7.97e+03, 8.23e+03, 8.50e+03, 8.78e+03, 9.07e+03, 9.37e+03, 9.68e+03, 1.00e+04] # ns

variables:
  ev_id:
    expr: "charge_events['id']"
    filt: False
  ev_unix:
    expr: "charge_events['unix_ts']"
    filt: False
  ev_pps_start:
    expr: "charge_events['ts_start']"
    filt: False
  ev_pps_end:
    expr: "charge_events['ts_end']"
    filt: False
  all:
    expr: "np.ones_like(ev_id, dtype=bool)"

  swvfm_align_idx:
    expr: "(light_samples - align['sample_idx'][:,0,0]).filled(0).astype(int)[...,np.newaxis] + np.arange(256, dtype=int)"
  swvfm_data_aligned:
    # shape: (cevents, ntpc, ndet, light_samples*2)
    expr: "np.zeros((align.shape[0], 2, 16, 2*light_samples))"
  _do_swvfm_data_aligned:
    expr: "np.put_along_axis(swvfm_data_aligned, swvfm_align_idx, swvfm['samples'][:,0,0].filled(0), axis=-1)"

  align_ns_nan:
    # shape: (cevents, levents, 1)
    expr: "numpy.where(align['ns'].mask & ~np.all(align['ns'].mask, axis=-2)[:,np.newaxis,:], numpy.nan, align['ns'])"
    filt: False

  imin_align_ns_nan:
    # shape: (cevents, 1)
    expr: "numpy.nanargmin(align_ns_nan.reshape(align_ns_nan.shape[0], -1), axis=-1)"
    filt: False

  align_sample_idx_nan:
    # shape: (cevents, levents, 1, ntpc, ndet) -> (cevents, ntpc, ndet)
    expr: "numpy.take_along_axis(align['sample_idx'], imin_align_ns_nan[...,np.newaxis,np.newaxis,np.newaxis,np.newaxis], axis=1).reshape((len(charge_events),) + align.dtype['sample_idx'].shape)"
    filt: False

  #post_trigger_window:
  #  expr: "0" # "(light_samples - numpy.nanmax(np.where(((align_sample_idx_nan==0) | align_sample_idx_nan.mask) & ~np.all(align_sample_idx_nan.mask, axis=(-1,-2,-3,-4))[:,np.newaxis,np.newaxis,np.newaxis,np.newaxis], numpy.nan, align_sample_idx_nan), axis=(-1,-2,-3,-4)) - boundary_samples) * sample_rate * 1e3"
  #  filt: False

  #pre_trigger_window:
  #  expr: "0" # "numpy.nanmin(align_ns_nan, axis=(-1,-2)) - prompt['ns']"
  #  filt: False

  #dead_time:
  #  expr: "0" # "pre_trigger_window + post_trigger_window"
  #  filt: False

  # Variables that we also want to extract, but require a bit more manipulation
  max_light_dt:
    expr: "numpy.max(numpy.diff(numpy.max(light_events['tai_ns'].astype(float) * light_events['wvfm_valid'], axis=(-1)), axis=-2).filled(0), axis=(-1,-2)).clip(0, 15000) if light_events.shape[1] > 1 else numpy.zeros(charge_events.shape)"
    filt: False
  prompt_factor:
    expr: "numpy.sqrt((prompt['terms']**2).sum(axis=1)).sum(axis=(-1,-2))"
    filt: False
  delayed_time:
    expr: "delayed['delay']" #"fit['delayed_ns']"
    filt: False
  prompt_sum:
    expr: "light_rescale * prompt['sum']"
    filt: False
  prompt_sum_res:
    expr: "light_rescale * prompt['res_sum']"
    filt: False
  prompt_sum_ch:
    expr: "light_rescale * fit['prompt_sum']"
    filt: False
  prompt_pca_terms:
    expr: "prompt['terms']"
    filt: False
  delayed_sum_smear:
    # adds a smearing factor to simulation
    expr: "numpy.random.normal(size=prompt_sum_ch.shape, scale=numpy.sqrt((
numpy.abs(light_smear[1:,:,:,1] + light_smear[1:,:,:,0]**2 * numpy.abs(prompt_sum_ch))
-numpy.abs(light_smear[0:1,:,:,1] + light_smear[0:1,:,:,0]**2 * numpy.abs(prompt_sum_ch))
).clip(1e-9, None)))"
    filt: False
  delayed_sum_ch:
    expr: "light_rescale * fit['delayed_sum'] + delayed_sum_smear + light_smear_bias"
    filt: False
  delayed_sum:
    expr: "delayed_sum_ch.sum(axis=(-1,-2))"
    filt: False
  prompt_energy:
    expr: "0.1 * fit['prompt_f'] * fit['pe_vis'] / fit['prompt_acc'].sum(axis=(-1,-2)).clip(1e-30,None)"
    filt: False    
  delayed_energy:
    expr: "0.1 * (1-fit['prompt_f']) * fit['pe_vis'] / fit['delayed_acc'].sum(axis=(-1,-2)).clip(1e-30,None)"
    filt: False
  tagged_nhit:
    expr: "michel_label['michel_nhit']"
    filt: False
  tagged_energy:
    expr: "michel_label['michel_e']"
    filt: False
  bkg_nhit:
    expr: "bkg_label['bkg_nhit']"
    filt: False
  #tagged_nhit_rescale:
  #  expr: "michel_label['michel_nhit'] * (1 if is_mc == False else 1.11) + (0 if is_mc == False else numpy.random.norm(size=michel_label.shape))"
  #  filt: False
  michel_e_smear:
    expr: "michel_label['michel_e'] + 3000 / 0.4796 * 23.6/1e3 * numpy.random.normal(scale=numpy.sqrt(michel_label['michel_nhit'].clip(1,None)), size=michel_label['michel_e'].shape)"
    filt: False    
  delayed_sig:
    expr: "delayed['sig']"
    filt: False
  delayed_ampl:
    expr: "light_rescale * delayed['ampl']"
    filt: False
  prompt_ampl:
    expr: "light_rescale * prompt['ampl']"
    filt: False    
  prompt_sig:
    expr: "prompt['sig']"
    filt: False    
  cos_theta:
    expr: "numpy.sum(michel_label['muon_dir'] * michel_label['michel_dir'], axis=-1)"
    filt: False
  bkg_nhit_x_cos_theta:
    expr: "bkg_nhit * cos_theta"
    filt: False    
  muon_theta:
    expr: "michel_label['muon_dir'][:,1]"
    filt: False
  muon_phi:
    expr: "michel_label['muon_dir'][:,2]"
    filt: False
  muon_eta:
    expr: "michel_label['muon_dir'][:,0]"
    filt: False
  muon_azi:
    expr: "numpy.arctan2(muon_eta, muon_phi)"
  start_x:
    expr: "profile['seed_pt'][:,0]"
    filt: False
  start_y:
    expr: "profile['seed_pt'][:,1]"
    filt: False
  start_z:
    expr: "profile['seed_pt'][:,2]"
    filt: False
  stop_x:
    expr: "michel_label['stop_pt'][:,0]"
    filt: False
  stop_y:
    expr: "michel_label['stop_pt'][:,1]"
    filt: False
  stop_z:
    expr: "michel_label['stop_pt'][:,2]"
    filt: False
  michel_stop_x:
    expr: "michel_label['michel_end'][:,0]"
    filt: False
  michel_stop_y:
    expr: "michel_label['michel_end'][:,1]"
    filt: False
  michel_stop_z:
    expr: "michel_label['michel_end'][:,2]"
    filt: False
  traj_reshape:
    expr: "traj_all.reshape(michel_label.shape + (-1,))"
    filt: False
  true_muon_charge:
    expr: "stopping_track['n_electrons'].sum(axis=-1).filled(0).ravel()"
    filt: False
  true_muon_light:
    expr: "stopping_track['n_photons'].sum(axis=-1).filled(0).ravel()"
    filt: False
  true_michel_charge:
    expr: "michel_track['n_electrons'].sum(axis=-1).filled(0).ravel()"
    filt: False
  true_michel_light:
    expr: "michel_track['n_photons'].sum(axis=-1).filled(0).ravel()"
    filt: False
  true_michel_ke:
    expr: "numpy.sqrt(numpy.linalg.norm(capture_truth['michel_start_pxyz'], axis=-1) + 510.99895**2) - 510.99895"
    filt: False
  delta_near_endpoint:
    expr: "np.any(
      (np.linalg.norm(michel_label['stop_pt'][:,np.newaxis,:] - traj_reshape['xyz_start'], axis=-1) < 100)
      & (traj_reshape['pdgId'] == 11)
      & (traj_reshape['start_process'] == 2)
      & (np.linalg.norm(traj_reshape['pxyz_start'], axis=-1) > 3500)
      & (traj_reshape['parentID'] == stopping_track['trackID'][:,0:1]),
    axis=-1)"
  pos_x:
    expr: "profile['profile_pos'][...,0] * (profile['profile_n'] > 0)"
    filt: False
  pos_y:
    expr: "profile['profile_pos'][...,1] * (profile['profile_n'] > 0)"
    filt: False
  pos_z:
    expr: "profile['profile_pos'][...,2] * (profile['profile_n'] > 0)"
    filt: False
  profile_delta:
    expr: "numpy.diff(profile['profile_pos'], axis=-2)"
    filt: False
  profile_dir:
    expr: "profile_delta / numpy.linalg.norm(profile_delta, axis=-1, keepdims=True).clip(1e-30, None)"
    filt: False
  profile_cos:
    expr: "np.sum(profile_dir[...,1:,:] * profile_dir[...,:-1,:], axis=-1) * ~np.all(profile_dir[...,1:,:] != 0, axis=-1) * ~np.all(profile_dir[...,:-1,:] != 0, axis=-1) + (np.all(profile_dir[...,1:,:] == 0, axis=-1) | np.all(profile_dir[...,:-1,:] == 0, axis=-1)) * 50"
    filt: False
  profile_scatter_flag:
    expr: "(profile_cos < 0.7) & (profile['profile_n'][...,1:-1] > 0) & (profile['profile_n'][...,2:] > 0) & (profile['profile_n'][...,:-2] > 0)"
    filt: False
  range_of_first_scatter:
    expr: "np.where(
          profile_scatter_flag.any(axis=-1),
          np.take_along_axis(profile['profile_rr'], np.argmax(profile_scatter_flag, axis=-1)[...,np.newaxis] + 1, axis=-1).ravel(),
          profile['profile_rr'] * (profile['n'] > 0)).min(axis=-1)"
    filt: False
  dqdx:
    expr: "profile['profile_dqdx'] * (profile['profile_n'] > 0)"
    filt: False
  dqdx_smear:
    expr: "numpy.where((profile['profile_n'] > 0), profile['profile_dqdx'] * numpy.random.normal(size=profile['profile_dqdx'].shape, loc=1, scale=0.23 / np.sqrt(profile['profile_n'].clip(1,None))), 0)"
    filt: False    
  dndx:
    expr: "profile['profile_n'] / numpy.clip(profile['profile_dx'], 1e-30, None)"
    filt: False
  dn:
    expr: "profile['profile_n'] * (profile['profile_n'] > 0) + -50 * (profile['profile_n'] == 0)"
    filt: False
  dq:
    expr: "profile['profile_dqdx'] * profile['profile_dx'] * (profile['profile_n'] > 0) + -50 * (profile['profile_n'] == 0)"
    filt: False        
  rr:
    expr: "profile['profile_rr'] * (profile['profile_n'] > 0) + -50 * (profile['profile_n'] == 0)"
    filt: False
  dx:
    expr: "profile['profile_dx'] * (profile['profile_n'] > 0) + -50 * (profile['profile_n'] == 0)"
    filt: False
  muon_range:
    expr: "profile['profile_rr'].max(axis=-1)"
    filt: False
  muon_t:
    expr: "muon_range_table(profile['profile_rr'].max(axis=-1))"
    filt: False
  through_going_muon_itrack:
    expr: "numpy.argmin(np.linalg.norm(reco_tracks['trajectory'][:,:,0,:] - profile['seed_pt'][:,np.newaxis,:], axis=-1), axis=-1).ravel()"
    filt: False
  through_going_muon_track:
    expr: "numpy.take_along_axis(reco_tracks, through_going_muon_itrack[:,numpy.newaxis], axis=-1).ravel()"
    filt: False
  through_going_muon_range:
    expr: "numpy.sum(numpy.linalg.norm(through_going_muon_track['dx'], axis=-1), axis=-1).ravel()"
    filt: False
  dedx:
    expr: "muon_dedx_table(profile['profile_rr'].ravel()).reshape(profile['profile_rr'].shape) * (profile['profile_n'] > 0)"
    filt: False    
  muon_q:
    expr: "(profile['profile_dqdx'] * profile['profile_dx'] * (profile['profile_n'] > 0) * (profile['profile_rr'] >= 0)).sum(axis=-1)"
    filt: False
  muon_n:
    expr: "(profile['profile_n'] * (profile['profile_n'] > 0) * (profile['profile_rr'] >= 0)).sum(axis=-1)"
    filt: False    
  prompt_acc:
    expr: "fit['prompt_acc'].sum(axis=(-1,-2))"
    filt: False
  delayed_acc:
    expr: "fit['delayed_acc'].sum(axis=(-1,-2))"
    filt: False
  prompt_acc_ch:
    expr: "fit['prompt_acc']"
    filt: False
  delayed_acc_ch:
    expr: "fit['delayed_acc']"
    filt: False
  prompt_ampl_ch:
    expr: "fit['prompt_ampl']"
    filt: False
  delayed_ampl_ch:
    expr: "fit['delayed_ampl']"
    filt: False
  true_delay:
    expr: "(michel_track['t0'][:,0] - stopping_track['t0'][:,0]).filled(0).reshape(-1).clip(0,10) * 1e3" # convert us -> ns
    filt: False
  true_stop_x:
    expr: "capture_truth['xyz_stop'][:,0]"
    filt: False
  true_stop_y:
    expr: "capture_truth['xyz_stop'][:,1]"
    filt: False
  true_stop_z:
    expr: "capture_truth['xyz_stop'][:,2]"
    filt: False
  true_muon_de:
    expr: "stopping_track['dE'].sum(axis=-1).filled(0).ravel()"
    filt: False
  true_michel_de:
    expr: "michel_track['dE'].sum(axis=-1).filled(0).ravel()"
    filt: False
  mip_score:
    expr: "(stop_label['mip_loglikelihood_mean'] - stop_label['muon_loglikelihood_mean']) * (stop_label['mip_loglikelihood_mean'] != 0.0) + 9999*(stop_label['mip_loglikelihood_mean'] == 0.0)"
    filt: False
  proton_score:
    expr: "(stop_label['proton_loglikelihood_mean'] - stop_label['muon_loglikelihood_mean']) * (stop_label['proton_loglikelihood_mean'] != 0.0) + 9999*(stop_label['proton_loglikelihood_mean'] == 0.0)"
    filt: False
  profile_mip_dqdx_ll:
    expr: "np.where((profile['profile_n'] > 0) & (profile['profile_rr'] > 0) & np.isfinite(profile['mip_likelihood'][...,0]), (profile['mip_likelihood'][...,0]), 0).sum(axis=-1)"
    filt: False    
  profile_muon_dqdx_ll:
    expr: "np.where((profile['profile_n'] > 0) & (profile['profile_rr'] > 0) & np.isfinite(profile['muon_likelihood'][...,0]), (profile['muon_likelihood'][...,0]), 0).sum(axis=-1)"
    filt: False
  profile_proton_dqdx_ll:
    expr: "np.where((profile['profile_n'] > 0) & (profile['profile_rr'] > 0) & np.isfinite(profile['proton_likelihood'][...,0]), (profile['proton_likelihood'][...,0]), 0).sum(axis=-1)"
    filt: False
  profile_mip_mcs_ll:
    expr: "np.where((profile['profile_n'] > 0) & (profile['profile_rr'] > 0) & np.isfinite(profile['mip_likelihood'][...,1]), (profile['mip_likelihood'][...,1]), 0).sum(axis=-1)"
    filt: False    
  profile_muon_mcs_ll:
    expr: "np.where((profile['profile_n'] > 0) & (profile['profile_rr'] > 0) & np.isfinite(profile['muon_likelihood'][...,1]), (profile['muon_likelihood'][...,1]), 0).sum(axis=-1)"
    filt: False    
  profile_proton_mcs_ll:
    expr: "np.where((profile['profile_n'] > 0) & (profile['profile_rr'] > 0) & np.isfinite(profile['proton_likelihood'][...,1]), (profile['proton_likelihood'][...,1]), 0).sum(axis=-1)"
    filt: False    
         
  profile_mip_dqdx_score:
    expr: "profile_mip_dqdx_ll - profile_muon_dqdx_ll"
    filt: False    
  profile_proton_dqdx_score:
    expr: "profile_proton_dqdx_ll - profile_muon_dqdx_ll"
    filt: False    
  profile_mip_mcs_score:
    expr: "profile_mip_mcs_ll - profile_muon_mcs_ll"
    filt: False    
  profile_proton_mcs_score:
    expr: "profile_proton_mcs_ll - profile_muon_mcs_ll"
    filt: False

  profile_mip_dqdx_score_mean:
    expr: "profile_mip_dqdx_score / (profile['profile_rr'] > 0).sum(axis=-1).clip(1,None)"
    filt: False    
  profile_proton_dqdx_score_mean:
    expr: "profile_proton_dqdx_score / (profile['profile_rr'] > 0).sum(axis=-1).clip(1,None)"  
    filt: False    
  profile_mip_mcs_score_mean:
    expr: "profile_mip_mcs_score / (profile['profile_rr'] > 0).sum(axis=-1).clip(1,None)"    
    filt: False    
  profile_proton_mcs_score_mean:
    expr: "profile_proton_mcs_score / (profile['profile_rr'] > 0).sum(axis=-1).clip(1,None)"      
    filt: False


  # ~~~ Cut variables ~~~
  through_going:
    expr: "numpy.all(numpy.abs(through_going_muon_track['trajectory'][:,[0,-1],1]) > 600, axis=-1).ravel().filled(False) & (numpy.prod(through_going_muon_track['trajectory'][:,[0,-1],1], axis=-1) < 0).ravel().filled(False)"
  stop_pt_veto: # manually veto regions near high number of through-going backgrounds, due to poor reconstruction quality
    expr: "(((run == 1) & (stop_z < 0) & ((
            (stop_x < -310.38+75.4) & (stop_x > -310.38)
          & (stop_y < -620.76+75.4) & (stop_y > -620.76))
         | ((stop_x < 62.1+26.60) & (stop_x > 62.1)
          & (stop_y < 97.55+26.60/2) & (stop_y > 97.55))
         | ((stop_x < 177.36+44.34) & (stop_x > 177.36)
          & (stop_y < 124.15+26.60) & (stop_y > 124.15))
         | ((stop_x < -310.38+75.40) & (stop_x > -310.38)
          & (stop_y < 620.76) & (stop_y > 620.76-75.4))
         | ((stop_x < 310.38) & (stop_x > 310.38-75.40)
          & (stop_y < 620.76) & (stop_y > 620.76-75.4))
         | ((stop_x < 26.60) & (stop_x > -26.60)
          & (stop_y < -620.76+75.4) & (stop_y > -620.76))))
       | ((run == 1) & (stop_z > 0) & ((
            (stop_x < 310.38) & (stop_x > 0)
          & (stop_y < -310.38+26.60*1.5) & (stop_y > -310.38))
         | ((stop_x < -93.11+35.47) & (stop_x > -93.11)
          & (stop_y < -62.08+26.60) & (stop_y > -62.08))
         | ((stop_x < 53.2) & (stop_x > -26.60)
          & (stop_y < -620.76+310.38+26.60) & (stop_y > -620.76))
         | ((stop_x < 310.38) & (stop_x > 310.38-3*26.60)
          & (stop_y < -310.38-2*26.60) & (stop_y > -310.38+4*26.60))
         | ((stop_x < -310.38+75.40) & (stop_x > -310.38)
          & (stop_y < 620.76) & (stop_y > 620.76-75.4))
         | ((stop_x < 310.38) & (stop_x > 310.38-3*26.60)
          & (stop_y < -310.38-2*26.60) & (stop_y > -310.38-4*26.60))
         | ((stop_x < 310.38) & (stop_x > 310.38-75.40)
          & (stop_y < 620.76) & (stop_y > 620.76-75.4))))
       | ((run == 2) & (stop_z < 0) & ((
            (stop_x < 14*4.434) & (stop_x > -310.38)
          & (stop_y < -310.38+4.434*24) & (stop_y > -2*310.38))
         | ((stop_x < 177.36+44.34) & (stop_x > 177.36)
          & (stop_y < 124.15+26.60) & (stop_y > 124.15))))
       | ((run == 2) & (stop_z > 0) & ((
            (stop_x < 310.38) & (stop_x > 0)
          & (stop_y < -310.38+26.60*1.5) & (stop_y > -310.38))
         | ((stop_x < -93.11+35.47) & (stop_x > -93.11)
          & (stop_y < -62.08+26.60) & (stop_y > -62.08))
         | ((stop_x < 310.38) & (stop_x > 310.38-3*26.60)
          & (stop_y < -310.38-2*26.60) & (stop_y > -310.38-4*26.60))
         | ((stop_x < 14*4.434) & (stop_x > -310.38)
          & (stop_y < 310.38+24*4.434) & (stop_y > -14*4.434))
         | ((stop_x < 53.2) & (stop_x > -7*4.434)
          & (stop_y < -620.76+310.38+26.60) & (stop_y > -620.76))))
      | ((stop_y < -620.76+155.19) & (numpy.abs(stop_z) < 310 - 155)))"
    filt: False
  quality_fid_cut: # cut events that don't start in detector
    expr: "(numpy.abs(start_x) <= 310.38)
          & (numpy.abs(start_y) <= 620.76)
          & (numpy.abs(start_z) <= 315)"
  fid_cut_60: # expand fiducial cut
    expr: "((numpy.abs(stop_z) > 31.04) & (numpy.abs(stop_z) < 310 - 62.08)
          & (numpy.abs(stop_x) < 310.38 - 62.08)
          & (stop_y > -620.76 + 62.08) & (stop_y < 620.76 - 62.08))"
    filt: False
  fid_cut_40: # expand fiducial cut (to a lesser degree)
    expr: "((numpy.abs(stop_z) > 39.91/2) & (numpy.abs(stop_z) < 310 - 39.91)
          & (numpy.abs(stop_x) < 310.38 - 39.91)
          & (stop_y > -620.76 + 39.91) & (stop_y < 620.76 - 39.91))"
    filt: False
  angle_veto:
    expr: "(muon_theta <= 0)"
    filt: False
  stop_cut:
    expr: "stop_label['stop'] & ~((stop_x == 0.0) & (stop_y == 0.0) & (stop_z == 0.0)) & (max_light_dt < 15000) & quality_fid_cut & ~angle_veto"
    filt: False
  muon_cut:
    expr: "stop_label['sel'] & (mip_score < 0.1) & (proton_score < -0.15) & (profile_mip_mcs_score_mean > -2.0) & (profile_proton_mcs_score_mean > -0.5)"
    filt: False
  veto:
    expr: "stop_pt_veto | (tagged_nhit > 100) | (bkg_nhit > 60) | ((bkg_nhit > 15) & (cos_theta < -0.992))"
    filt: False
  michel_cut:
    expr: "(tagged_nhit > 10) & (cos_theta > -0.98)"
    filt: False
  michel_cut_nhit12:
    expr: "(tagged_nhit > 12) & (cos_theta > -0.98)"
    filt: False
  michel_cut_nhit8:
    expr: "(tagged_nhit > 12) & (cos_theta > -0.98)"
    filt: False
  
  light_cut:
    expr: "(prompt['valid'] == 1) & (delayed['valid'] == 1) & (delayed_time > 340) & (delayed_sum > 50) & (delayed_sum / delayed_acc.clip(1e-30,None) > 15 * tagged_nhit)"
  light_cut_yield20:
    expr: "(prompt['valid'] == 1) & (delayed['valid'] == 1) & (delayed_time > 340) & (delayed_sum > 50) & (delayed_sum / delayed_acc.clip(1e-30,None) > 20 * tagged_nhit)"
  light_cut_yield10:
    expr: "(prompt['valid'] == 1) & (delayed['valid'] == 1) & (delayed_time > 340) & (delayed_sum > 50) & (delayed_sum / delayed_acc.clip(1e-30,None) > 10 * tagged_nhit)"
  light_cut_sum50:
    expr: "(prompt['valid'] == 1) & (delayed['valid'] == 1) & (delayed_time > 340) & (delayed_sum > 40) & (delayed_sum / delayed_acc.clip(1e-30,None) > 15 * tagged_nhit)"
  light_cut_sum60:
    expr: "(prompt['valid'] == 1) & (delayed['valid'] == 1) & (delayed_time > 340) & (delayed_sum > 60) & (delayed_sum / delayed_acc.clip(1e-30,None) > 15 * tagged_nhit)"

  in_charge_ratio_time_window:
    expr: "(delayed_time > 340) & (((run == 2) & (delayed_time < 9000)) | ((run == 1) & (delayed_time < 1460)))"
  in_michel_plus_time_window:
    expr: "(((run == 2) & (delayed_time < 9000) & (delayed_time > 3000)) | ((run == 1) & (delayed_time > 3000) & (delayed_time < 9000)))"
  top_half:
    expr: "(stop_y > 0)"
  bottom_half:
    expr: "(stop_y < 0)"
  # ~~~ ~~~

  # ~~~ Truth variables ~~~
  poor_reco:
    expr: "(numpy.abs(delayed_time - true_delay) > 100).astype(bool) | (delayed_time == 0).astype(bool)"
    filt: False

  # signal events
  true_michel:
    expr: "capture_truth['michel'] & stop_truth['sel']"
  true_michel_minus:
    expr: "true_michel & (capture_truth['stopping_pdg_id'] == 13)"
  true_michel_plus:
    expr: "true_michel & (capture_truth['stopping_pdg_id'] == -13)"
  true_capt:
    expr: "(capture_truth['stopping_pdg_id'] == 13) & ~capture_truth['michel'] & stop_truth['sel']"
  # true proton backgrounds
  true_bkg_stop_proton:
    expr: "(~true_michel & ~true_capt & capture_truth['stopping_event'] & (capture_truth['stopping_pdg_id'] == 2212))"
  true_bkg_nonstop_proton:
    expr: "(~true_michel & ~true_capt & (stop_truth['proton_loglikelihood_mean'].astype(bool) | capture_truth['stopping_pdg_id'] == 2212) & ~true_bkg_stop_proton)"
  true_bkg_proton:
    expr: "(true_bkg_stop_proton | true_bkg_nonstop_proton)"
  mc_proton_cut: # remove all proton events from simulation due to 100x over representation in simulation
    expr: "true_bkg_proton if is_mc else np.zeros_like(ev_id, dtype=bool)"
    
  # true muon backgrounds
  true_bkg_stop_muon:
    expr: "(~true_michel & ~true_capt & ~true_bkg_proton & capture_truth['stopping_event'] & (numpy.abs(capture_truth['stopping_pdg_id']) == 13))"  
  true_bkg_nonstop_muon:
    expr: "(~true_michel & ~true_capt & ~true_bkg_proton & (stop_truth['mip_loglikelihood_mean'].astype(bool) | (numpy.abs(capture_truth['stopping_pdg_id']) == 13)) & ~true_bkg_stop_muon)"
  true_bkg_muon:
    expr: "(true_bkg_stop_muon | true_bkg_nonstop_muon)"

  # true neutron backgrounds
  true_bkg_neutron:
    expr: "(~true_michel & ~true_capt & ~true_bkg_muon & ~true_bkg_proton & (capture_truth['stopping_pdg_id'] == 2112))"

  # true pion backgrounds
  true_bkg_pion:
    expr: "(~true_michel & ~true_capt & ~true_bkg_muon & ~true_bkg_proton & ~true_bkg_neutron & (numpy.abs(capture_truth['stopping_pdg_id']) == 211))"

  # true EM shower backgrounds
  true_bkg_shower:
    expr: "(~true_michel & ~true_capt & ~true_bkg_muon & ~true_bkg_proton & ~true_bkg_neutron & ~true_bkg_pion & ((numpy.abs(capture_truth['stopping_pdg_id']) == 11) | (capture_truth['stopping_pdg_id'] == 22)))"

  # catch-all for remaining background events
  true_bkg_other:
    expr: "(~true_michel & ~true_capt & ~true_bkg_muon & ~true_bkg_proton & ~true_bkg_neutron & ~true_bkg_pion & ~true_bkg_shower)"
  # ~~~ ~~~

  # ~~~ Selection filters ~~~
  reco_stop:
    expr: "stop_cut & ~mc_proton_cut"
  reco_stop_true_michel:
    expr: "reco_stop & true_michel"
  reco_stop_true_michel_plus:
    expr: "reco_stop & true_michel_plus"
  reco_stop_true_michel_minus:
    expr: "reco_stop & true_michel_minus"
  reco_stop_true_capt:
    expr: "reco_stop & true_capt"
  reco_stop_bkg_proton:
    expr: "reco_stop & true_bkg_proton"
  reco_stop_bkg_stop_proton:
    expr: "reco_stop & true_bkg_stop_proton"
  reco_stop_bkg_nonstop_proton:
    expr: "reco_stop & true_bkg_nonstop_proton"
  reco_stop_bkg_muon:
    expr: "reco_stop & true_bkg_muon"
  reco_stop_bkg_stop_muon:
    expr: "reco_stop & true_bkg_stop_muon"
  reco_stop_bkg_nonstop_muon:
    expr: "reco_stop & true_bkg_nonstop_muon"
  reco_stop_bkg_neutron:
    expr: "reco_stop & true_bkg_neutron"
  reco_stop_bkg_pion:
    expr: "reco_stop & true_bkg_pion"
  reco_stop_bkg_shower:
    expr: "reco_stop & true_bkg_shower"
  reco_stop_bkg_other:
    expr: "reco_stop & true_bkg_other"
  reco_stop_bkg:
    expr: "reco_stop & (true_bkg_other | true_bkg_shower | true_bkg_pion | true_bkg_neutron | true_bkg_muon | true_bkg_proton)"

  reco_muon:
    expr: "reco_stop & muon_cut"
  reco_muon_true_michel:
    expr: "reco_muon & true_michel"
  reco_muon_true_michel_plus:
    expr: "reco_muon & true_michel_plus"
  reco_muon_true_michel_minus:
    expr: "reco_muon & true_michel_minus"
  reco_muon_true_capt:
    expr: "reco_muon & true_capt"
  reco_muon_bkg_proton:
    expr: "reco_muon & true_bkg_proton"
  reco_muon_bkg_stop_proton:
    expr: "reco_muon & true_bkg_stop_proton"
  reco_muon_bkg_nonstop_proton:
    expr: "reco_muon & true_bkg_nonstop_proton"
  reco_muon_bkg_muon:
    expr: "reco_muon & true_bkg_muon"
  reco_muon_bkg_stop_muon:
    expr: "reco_muon & true_bkg_stop_muon"
  reco_muon_bkg_nonstop_muon:
    expr: "reco_muon & true_bkg_nonstop_muon"
  reco_muon_bkg_neutron:
    expr: "reco_muon & true_bkg_neutron"
  reco_muon_bkg_pion:
    expr: "reco_muon & true_bkg_pion"
  reco_muon_bkg_shower:
    expr: "reco_muon & true_bkg_shower"
  reco_muon_bkg_other:
    expr: "reco_muon & true_bkg_other"
  reco_muon_bkg:
    expr: "reco_muon & (true_bkg_other | true_bkg_shower | true_bkg_pion | true_bkg_neutron | true_bkg_muon | true_bkg_proton)"    
  
  proton_sideband:
    expr: "stop_cut & (proton_score > 0) & (mip_score < -0.25)"
  proton_sideband_true_michel:
    expr: "proton_sideband & true_michel"
  proton_sideband_true_michel_plus:
    expr: "proton_sideband & true_michel_plus"
  proton_sideband_true_michel_minus:
    expr: "proton_sideband & true_michel_minus"
  proton_sideband_true_capt:
    expr: "proton_sideband & true_capt"
  proton_sideband_bkg_proton:
    expr: "proton_sideband & true_bkg_proton"
  proton_sideband_bkg_stop_proton:
    expr: "proton_sideband & true_bkg_stop_proton"
  proton_sideband_bkg_nonstop_proton:
    expr: "proton_sideband & true_bkg_nonstop_proton"
  proton_sideband_bkg_muon:
    expr: "proton_sideband & true_bkg_muon"
  proton_sideband_bkg_stop_muon:
    expr: "proton_sideband & true_bkg_stop_muon"
  proton_sideband_bkg_nonstop_muon:
    expr: "proton_sideband & true_bkg_nonstop_muon"
  proton_sideband_bkg_neutron:
    expr: "proton_sideband & true_bkg_neutron"
  proton_sideband_bkg_pion:
    expr: "proton_sideband & true_bkg_pion"
  proton_sideband_bkg_shower:
    expr: "proton_sideband & true_bkg_shower"
  proton_sideband_bkg_other:
    expr: "proton_sideband & true_bkg_other"
    
  mip_sideband:
    expr: "stop_cut & (proton_score < 0) & (mip_score > 0) & ~mc_proton_cut"
  mip_sideband_true_michel:
    expr: "mip_sideband & true_michel"
  mip_sideband_true_michel_plus:
    expr: "mip_sideband & true_michel_plus"
  mip_sideband_true_michel_minus:
    expr: "mip_sideband & true_michel_minus"
  mip_sideband_true_capt:
    expr: "mip_sideband & true_capt"
  mip_sideband_bkg_proton:
    expr: "mip_sideband & true_bkg_proton"
  mip_sideband_bkg_stop_proton:
    expr: "mip_sideband & true_bkg_stop_proton"
  mip_sideband_bkg_nonstop_proton:
    expr: "mip_sideband & true_bkg_nonstop_proton"
  mip_sideband_bkg_muon:
    expr: "mip_sideband & true_bkg_muon"
  mip_sideband_bkg_stop_muon:
    expr: "mip_sideband & true_bkg_stop_muon"
  mip_sideband_bkg_nonstop_muon:
    expr: "mip_sideband & true_bkg_nonstop_muon"
  mip_sideband_bkg_neutron:
    expr: "mip_sideband & true_bkg_neutron"
  mip_sideband_bkg_pion:
    expr: "mip_sideband & true_bkg_pion"
  mip_sideband_bkg_shower:
    expr: "mip_sideband & true_bkg_shower"
  mip_sideband_bkg_other:
    expr: "mip_sideband & true_bkg_other"

  reco_muon_veto:
    expr: "reco_muon & ~veto"
  reco_muon_veto_top_half:
    expr: "reco_muon_veto & top_half"
  reco_muon_veto_bottom_half:
    expr: "reco_muon_veto & bottom_half"
  reco_muon_veto_50_100MeV:
    expr: "reco_muon_veto & (muon_t < 100e3) & (muon_t > 50e3)"
  reco_muon_veto_100_200MeV:
    expr: "reco_muon_veto & (muon_t > 100e3) & (muon_t < 200e3)"
  reco_muon_veto_200_300MeV:
    expr: "reco_muon_veto & (muon_t > 200e3) & (muon_t < 300e3)"
  reco_muon_veto_azi0:
    expr: "reco_muon_veto & (muon_azi < -numpy.pi/2)"
  reco_muon_veto_azi1:
    expr: "reco_muon_veto & (muon_azi < 0) & (muon_azi > -numpy.pi/2)"
  reco_muon_veto_azi2:
    expr: "reco_muon_veto & (muon_azi < numpy.pi/2) & (muon_azi > 0)"
  reco_muon_veto_azi3:
    expr: "reco_muon_veto & (muon_azi > numpy.pi/2)"
  reco_muon_veto_true_michel:
    expr: "reco_muon_veto & true_michel"
  reco_muon_veto_true_michel_plus:
    expr: "reco_muon_veto & true_michel_plus"
  reco_muon_veto_true_michel_minus:
    expr: "reco_muon_veto & true_michel_minus"
  reco_muon_veto_true_capt:
    expr: "reco_muon_veto & true_capt"
  reco_muon_veto_bkg_proton:
    expr: "reco_muon_veto & true_bkg_proton"
  reco_muon_veto_bkg_stop_proton:
    expr: "reco_muon_veto & true_bkg_stop_proton"
  reco_muon_veto_bkg_nonstop_proton:
    expr: "reco_muon_veto & true_bkg_nonstop_proton"
  reco_muon_veto_bkg_muon:
    expr: "reco_muon_veto & true_bkg_muon"
  reco_muon_veto_bkg_stop_muon:
    expr: "reco_muon_veto & true_bkg_stop_muon"
  reco_muon_veto_bkg_nonstop_muon:
    expr: "reco_muon_veto & true_bkg_nonstop_muon"
  reco_muon_veto_bkg_neutron:
    expr: "reco_muon_veto & true_bkg_neutron"
  reco_muon_veto_bkg_pion:
    expr: "reco_muon_veto & true_bkg_pion"
  reco_muon_veto_bkg_shower:
    expr: "reco_muon_veto & true_bkg_shower"    
  reco_muon_veto_bkg_other:
    expr: "reco_muon_veto & true_bkg_other"
  reco_muon_veto_bkg:
    expr: "reco_muon_veto & (true_bkg_other | true_bkg_shower | true_bkg_pion | true_bkg_neutron | true_bkg_muon | true_bkg_proton)"

  reco_muon_veto_50_100MeV_true_michel:
    expr: "reco_muon_veto_50_100MeV & true_michel"
  reco_muon_veto_50_100MeV_true_michel_plus:
    expr: "reco_muon_veto_50_100MeV & true_michel_plus"
  reco_muon_veto_50_100MeV_true_michel_minus:
    expr: "reco_muon_veto_50_100MeV & true_michel_minus"
  reco_muon_veto_50_100MeV_true_capt:
    expr: "reco_muon_veto_50_100MeV & true_capt"
  reco_muon_veto_50_100MeV_bkg_proton:
    expr: "reco_muon_veto_50_100MeV & true_bkg_proton"
  reco_muon_veto_50_100MeV_bkg_stop_proton:
    expr: "reco_muon_veto_50_100MeV & true_bkg_stop_proton"
  reco_muon_veto_50_100MeV_bkg_nonstop_proton:
    expr: "reco_muon_veto_50_100MeV & true_bkg_nonstop_proton"
  reco_muon_veto_50_100MeV_bkg_muon:
    expr: "reco_muon_veto_50_100MeV & true_bkg_muon"
  reco_muon_veto_50_100MeV_bkg_stop_muon:
    expr: "reco_muon_veto_50_100MeV & true_bkg_stop_muon"
  reco_muon_veto_50_100MeV_bkg_nonstop_muon:
    expr: "reco_muon_veto_50_100MeV & true_bkg_nonstop_muon"
  reco_muon_veto_50_100MeV_bkg_neutron:
    expr: "reco_muon_veto_50_100MeV & true_bkg_neutron"
  reco_muon_veto_50_100MeV_bkg_pion:
    expr: "reco_muon_veto_50_100MeV & true_bkg_pion"
  reco_muon_veto_50_100MeV_bkg_shower:
    expr: "reco_muon_veto_50_100MeV & true_bkg_shower"    
  reco_muon_veto_50_100MeV_bkg_other:
    expr: "reco_muon_veto_50_100MeV & true_bkg_other"
  reco_muon_veto_50_100MeV_bkg:
    expr: "reco_muon_veto_50_100MeV & (true_bkg_other | true_bkg_shower | true_bkg_pion | true_bkg_neutron | true_bkg_muon | true_bkg_proton)"

  reco_muon_veto_100_200MeV_true_michel:
    expr: "reco_muon_veto_100_200MeV & true_michel"
  reco_muon_veto_100_200MeV_true_michel_plus:
    expr: "reco_muon_veto_100_200MeV & true_michel_plus"
  reco_muon_veto_100_200MeV_true_michel_minus:
    expr: "reco_muon_veto_100_200MeV & true_michel_minus"
  reco_muon_veto_100_200MeV_true_capt:
    expr: "reco_muon_veto_100_200MeV & true_capt"
  reco_muon_veto_100_200MeV_bkg_proton:
    expr: "reco_muon_veto_100_200MeV & true_bkg_proton"
  reco_muon_veto_100_200MeV_bkg_stop_proton:
    expr: "reco_muon_veto_100_200MeV & true_bkg_stop_proton"
  reco_muon_veto_100_200MeV_bkg_nonstop_proton:
    expr: "reco_muon_veto_100_200MeV & true_bkg_nonstop_proton"
  reco_muon_veto_100_200MeV_bkg_muon:
    expr: "reco_muon_veto_100_200MeV & true_bkg_muon"
  reco_muon_veto_100_200MeV_bkg_stop_muon:
    expr: "reco_muon_veto_100_200MeV & true_bkg_stop_muon"
  reco_muon_veto_100_200MeV_bkg_nonstop_muon:
    expr: "reco_muon_veto_100_200MeV & true_bkg_nonstop_muon"
  reco_muon_veto_100_200MeV_bkg_neutron:
    expr: "reco_muon_veto_100_200MeV & true_bkg_neutron"
  reco_muon_veto_100_200MeV_bkg_pion:
    expr: "reco_muon_veto_100_200MeV & true_bkg_pion"
  reco_muon_veto_100_200MeV_bkg_shower:
    expr: "reco_muon_veto_100_200MeV & true_bkg_shower"    
  reco_muon_veto_100_200MeV_bkg_other:
    expr: "reco_muon_veto_100_200MeV & true_bkg_other"
  reco_muon_veto_100_200MeV_bkg:
    expr: "reco_muon_veto_100_200MeV & (true_bkg_other | true_bkg_shower | true_bkg_pion | true_bkg_neutron | true_bkg_muon | true_bkg_proton)"

  reco_muon_veto_200_300MeV_true_michel:
    expr: "reco_muon_veto_200_300MeV & true_michel"
  reco_muon_veto_200_300MeV_true_michel_plus:
    expr: "reco_muon_veto_200_300MeV & true_michel_plus"
  reco_muon_veto_200_300MeV_true_michel_minus:
    expr: "reco_muon_veto_200_300MeV & true_michel_minus"
  reco_muon_veto_200_300MeV_true_capt:
    expr: "reco_muon_veto_200_300MeV & true_capt"
  reco_muon_veto_200_300MeV_bkg_proton:
    expr: "reco_muon_veto_200_300MeV & true_bkg_proton"
  reco_muon_veto_200_300MeV_bkg_stop_proton:
    expr: "reco_muon_veto_200_300MeV & true_bkg_stop_proton"
  reco_muon_veto_200_300MeV_bkg_nonstop_proton:
    expr: "reco_muon_veto_200_300MeV & true_bkg_nonstop_proton"
  reco_muon_veto_200_300MeV_bkg_muon:
    expr: "reco_muon_veto_200_300MeV & true_bkg_muon"
  reco_muon_veto_200_300MeV_bkg_stop_muon:
    expr: "reco_muon_veto_200_300MeV & true_bkg_stop_muon"
  reco_muon_veto_200_300MeV_bkg_nonstop_muon:
    expr: "reco_muon_veto_200_300MeV & true_bkg_nonstop_muon"
  reco_muon_veto_200_300MeV_bkg_neutron:
    expr: "reco_muon_veto_200_300MeV & true_bkg_neutron"
  reco_muon_veto_200_300MeV_bkg_pion:
    expr: "reco_muon_veto_200_300MeV & true_bkg_pion"
  reco_muon_veto_200_300MeV_bkg_shower:
    expr: "reco_muon_veto_200_300MeV & true_bkg_shower"    
  reco_muon_veto_200_300MeV_bkg_other:
    expr: "reco_muon_veto_200_300MeV & true_bkg_other"
  reco_muon_veto_200_300MeV_bkg:
    expr: "reco_muon_veto_200_300MeV & (true_bkg_other | true_bkg_shower | true_bkg_pion | true_bkg_neutron | true_bkg_muon | true_bkg_proton)"    

  reco_muon_veto_fid60:
    expr: "reco_muon & ~veto & fid_cut_60"
  reco_muon_veto_fid60_top_half:
    expr: "reco_muon_veto_fid60 & top_half"
  reco_muon_veto_fid60_bottom_half:
    expr: "reco_muon_veto_fid60 & bottom_half"    
  reco_muon_veto_fid60_true_michel:
    expr: "reco_muon_veto_fid60 & true_michel"
  reco_muon_veto_fid60_true_michel_plus:
    expr: "reco_muon_veto_fid60 & true_michel_plus"
  reco_muon_veto_fid60_true_michel_minus:
    expr: "reco_muon_veto_fid60 & true_michel_minus"
  reco_muon_veto_fid60_true_capt:
    expr: "reco_muon_veto_fid60 & true_capt"
  reco_muon_veto_fid60_bkg_proton:
    expr: "reco_muon_veto_fid60 & true_bkg_proton"
  reco_muon_veto_fid60_bkg_stop_proton:
    expr: "reco_muon_veto_fid60 & true_bkg_stop_proton"
  reco_muon_veto_fid60_bkg_nonstop_proton:
    expr: "reco_muon_veto_fid60 & true_bkg_nonstop_proton"
  reco_muon_veto_fid60_bkg_muon:
    expr: "reco_muon_veto_fid60 & true_bkg_muon"
  reco_muon_veto_fid60_bkg_stop_muon:
    expr: "reco_muon_veto_fid60 & true_bkg_stop_muon"
  reco_muon_veto_fid60_bkg_nonstop_muon:
    expr: "reco_muon_veto_fid60 & true_bkg_nonstop_muon"
  reco_muon_veto_fid60_bkg_neutron:
    expr: "reco_muon_veto_fid60 & true_bkg_neutron"
  reco_muon_veto_fid60_bkg_pion:
    expr: "reco_muon_veto_fid60 & true_bkg_pion"
  reco_muon_veto_fid60_bkg_shower:
    expr: "reco_muon_veto_fid60 & true_bkg_shower"    
  reco_muon_veto_fid60_bkg_other:
    expr: "reco_muon_veto_fid60 & true_bkg_other"
  reco_muon_veto_fid60_bkg:
    expr: "reco_muon_veto_fid60 & (true_bkg_other | true_bkg_shower | true_bkg_pion | true_bkg_neutron | true_bkg_muon | true_bkg_proton)"

  reco_muon_veto_fid40:
    expr: "reco_muon & ~veto & fid_cut_40"
  reco_muon_veto_fid40_top_half:
    expr: "reco_muon_veto_fid40 & top_half"
  reco_muon_veto_fid40_bottom_half:
    expr: "reco_muon_veto_fid40 & bottom_half"    
  reco_muon_veto_fid40_true_michel:
    expr: "reco_muon_veto_fid40 & true_michel"
  reco_muon_veto_fid40_true_michel_plus:
    expr: "reco_muon_veto_fid40 & true_michel_plus"
  reco_muon_veto_fid40_true_michel_minus:
    expr: "reco_muon_veto_fid40 & true_michel_minus"
  reco_muon_veto_fid40_true_capt:
    expr: "reco_muon_veto_fid40 & true_capt"
  reco_muon_veto_fid40_bkg_proton:
    expr: "reco_muon_veto_fid40 & true_bkg_proton"
  reco_muon_veto_fid40_bkg_stop_proton:
    expr: "reco_muon_veto_fid40 & true_bkg_stop_proton"
  reco_muon_veto_fid40_bkg_nonstop_proton:
    expr: "reco_muon_veto_fid40 & true_bkg_nonstop_proton"
  reco_muon_veto_fid40_bkg_muon:
    expr: "reco_muon_veto_fid40 & true_bkg_muon"
  reco_muon_veto_fid40_bkg_stop_muon:
    expr: "reco_muon_veto_fid40 & true_bkg_stop_muon"
  reco_muon_veto_fid40_bkg_nonstop_muon:
    expr: "reco_muon_veto_fid40 & true_bkg_nonstop_muon"
  reco_muon_veto_fid40_bkg_neutron:
    expr: "reco_muon_veto_fid40 & true_bkg_neutron"
  reco_muon_veto_fid40_bkg_pion:
    expr: "reco_muon_veto_fid40 & true_bkg_pion"
  reco_muon_veto_fid40_bkg_shower:
    expr: "reco_muon_veto_fid40 & true_bkg_shower"    
  reco_muon_veto_fid40_bkg_other:
    expr: "reco_muon_veto_fid40 & true_bkg_other"
  reco_muon_veto_fid40_bkg:
    expr: "reco_muon_veto_fid40 & (true_bkg_other | true_bkg_shower | true_bkg_pion | true_bkg_neutron | true_bkg_muon | true_bkg_proton)"        

  reco_muon_veto_true_michel_with_delta:
    expr: "reco_muon_veto & true_michel & delta_near_endpoint"
  reco_muon_veto_true_michel_plus_with_delta:
    expr: "reco_muon_veto & true_michel_plus & delta_near_endpoint"
  reco_muon_veto_true_michel_minus_with_delta:
    expr: "reco_muon_veto & true_michel_minus & delta_near_endpoint"
  reco_muon_veto_true_capt_with_delta:
    expr: "reco_muon_veto & true_capt & delta_near_endpoint"
  reco_muon_veto_bkg_proton_with_delta:
    expr: "reco_muon_veto & true_bkg_proton & delta_near_endpoint"
  reco_muon_veto_bkg_stop_proton_with_delta:
    expr: "reco_muon_veto & true_bkg_stop_proton & delta_near_endpoint"
  reco_muon_veto_bkg_nonstop_proton_with_delta:
    expr: "reco_muon_veto & true_bkg_nonstop_proton & delta_near_endpoint"
  reco_muon_veto_bkg_muon_with_delta:
    expr: "reco_muon_veto & true_bkg_muon & delta_near_endpoint"
  reco_muon_veto_bkg_stop_muon_with_delta:
    expr: "reco_muon_veto & true_bkg_stop_muon & delta_near_endpoint"
  reco_muon_veto_bkg_nonstop_muon_with_delta:
    expr: "reco_muon_veto & true_bkg_nonstop_muon & delta_near_endpoint"
  reco_muon_veto_bkg_neutron_with_delta:
    expr: "reco_muon_veto & true_bkg_neutron & delta_near_endpoint"
  reco_muon_veto_bkg_pion_with_delta:
    expr: "reco_muon_veto & true_bkg_pion & delta_near_endpoint"
  reco_muon_veto_bkg_shower_with_delta:
    expr: "reco_muon_veto & true_bkg_shower & delta_near_endpoint"    
  reco_muon_veto_bkg_other_with_delta:
    expr: "reco_muon_veto & true_bkg_other & delta_near_endpoint"

  reco_muon_veto_no_protons:
    expr: "reco_muon_veto & ~reco_muon_veto_bkg_proton"
  reco_muon_veto_no_protons_top_half:
    expr: "reco_muon_veto_no_protons & top_half"
  reco_muon_veto_no_protons_bottom_half:
    expr: "reco_muon_veto_no_protons & bottom_half"    
  reco_muon_veto_no_protons_true_michel:
    expr: "reco_muon_veto_no_protons & true_michel"
  reco_muon_veto_no_protons_true_michel_plus:
    expr: "reco_muon_veto_no_protons & true_michel_plus"
  reco_muon_veto_no_protons_true_michel_minus:
    expr: "reco_muon_veto_no_protons & true_michel_minus"
  reco_muon_veto_no_protons_true_capt:
    expr: "reco_muon_veto_no_protons & true_capt"
  reco_muon_veto_no_protons_bkg_proton:
    expr: "reco_muon_veto_no_protons & true_bkg_proton"
  reco_muon_veto_no_protons_bkg_stop_proton:
    expr: "reco_muon_veto_no_protons & true_bkg_stop_proton"
  reco_muon_veto_no_protons_bkg_nonstop_proton:
    expr: "reco_muon_veto_no_protons & true_bkg_nonstop_proton"
  reco_muon_veto_no_protons_bkg_muon:
    expr: "reco_muon_veto_no_protons & true_bkg_muon"
  reco_muon_veto_no_protons_bkg_stop_muon:
    expr: "reco_muon_veto_no_protons & true_bkg_stop_muon"
  reco_muon_veto_no_protons_bkg_nonstop_muon:
    expr: "reco_muon_veto_no_protons & true_bkg_nonstop_muon"
  reco_muon_veto_no_protons_bkg_neutron:
    expr: "reco_muon_veto_no_protons & true_bkg_neutron"
  reco_muon_veto_no_protons_bkg_pion:
    expr: "reco_muon_veto_no_protons & true_bkg_pion"
  reco_muon_veto_no_protons_bkg_shower:
    expr: "reco_muon_veto_no_protons & true_bkg_shower"    
  reco_muon_veto_no_protons_bkg_other:
    expr: "reco_muon_veto_no_protons & true_bkg_other"

  reco_muon_veto_fid60_no_protons:
    expr: "reco_muon_veto_fid60 & ~reco_muon_veto_bkg_proton"
  reco_muon_veto_fid60_no_protons_top_half:
    expr: "reco_muon_veto_fid60_no_protons & top_half"
  reco_muon_veto_fid60_no_protons_bottom_half:
    expr: "reco_muon_veto_fid60_no_protons & bottom_half"    
  reco_muon_veto_fid60_no_protons_true_michel:
    expr: "reco_muon_veto_fid60_no_protons & true_michel"
  reco_muon_veto_fid60_no_protons_true_michel_plus:
    expr: "reco_muon_veto_fid60_no_protons & true_michel_plus"
  reco_muon_veto_fid60_no_protons_true_michel_minus:
    expr: "reco_muon_veto_fid60_no_protons & true_michel_minus"
  reco_muon_veto_fid60_no_protons_true_capt:
    expr: "reco_muon_veto_fid60_no_protons & true_capt"
  reco_muon_veto_fid60_no_protons_bkg_proton:
    expr: "reco_muon_veto_fid60_no_protons & true_bkg_proton"
  reco_muon_veto_fid60_no_protons_bkg_stop_proton:
    expr: "reco_muon_veto_fid60_no_protons & true_bkg_stop_proton"
  reco_muon_veto_fid60_no_protons_bkg_nonstop_proton:
    expr: "reco_muon_veto_fid60_no_protons & true_bkg_nonstop_proton"
  reco_muon_veto_fid60_no_protons_bkg_muon:
    expr: "reco_muon_veto_fid60_no_protons & true_bkg_muon"
  reco_muon_veto_fid60_no_protons_bkg_stop_muon:
    expr: "reco_muon_veto_fid60_no_protons & true_bkg_stop_muon"
  reco_muon_veto_fid60_no_protons_bkg_nonstop_muon:
    expr: "reco_muon_veto_fid60_no_protons & true_bkg_nonstop_muon"
  reco_muon_veto_fid60_no_protons_bkg_neutron:
    expr: "reco_muon_veto_fid60_no_protons & true_bkg_neutron"
  reco_muon_veto_fid60_no_protons_bkg_pion:
    expr: "reco_muon_veto_fid60_no_protons & true_bkg_pion"
  reco_muon_veto_fid60_no_protons_bkg_shower:
    expr: "reco_muon_veto_fid60_no_protons & true_bkg_shower"    
  reco_muon_veto_fid60_no_protons_bkg_other:
    expr: "reco_muon_veto_fid60_no_protons & true_bkg_other"

  reco_muon_veto_fid40_no_protons:
    expr: "reco_muon_veto_fid40 & ~reco_muon_veto_bkg_proton"
  reco_muon_veto_fid40_no_protons_top_half:
    expr: "reco_muon_veto_fid40_no_protons & top_half"
  reco_muon_veto_fid40_no_protons_bottom_half:
    expr: "reco_muon_veto_fid40_no_protons & bottom_half"    
  reco_muon_veto_fid40_no_protons_true_michel:
    expr: "reco_muon_veto_fid40_no_protons & true_michel"
  reco_muon_veto_fid40_no_protons_true_michel_plus:
    expr: "reco_muon_veto_fid40_no_protons & true_michel_plus"
  reco_muon_veto_fid40_no_protons_true_michel_minus:
    expr: "reco_muon_veto_fid40_no_protons & true_michel_minus"
  reco_muon_veto_fid40_no_protons_true_capt:
    expr: "reco_muon_veto_fid40_no_protons & true_capt"
  reco_muon_veto_fid40_no_protons_bkg_proton:
    expr: "reco_muon_veto_fid40_no_protons & true_bkg_proton"
  reco_muon_veto_fid40_no_protons_bkg_stop_proton:
    expr: "reco_muon_veto_fid40_no_protons & true_bkg_stop_proton"
  reco_muon_veto_fid40_no_protons_bkg_nonstop_proton:
    expr: "reco_muon_veto_fid40_no_protons & true_bkg_nonstop_proton"
  reco_muon_veto_fid40_no_protons_bkg_muon:
    expr: "reco_muon_veto_fid40_no_protons & true_bkg_muon"
  reco_muon_veto_fid40_no_protons_bkg_stop_muon:
    expr: "reco_muon_veto_fid40_no_protons & true_bkg_stop_muon"
  reco_muon_veto_fid40_no_protons_bkg_nonstop_muon:
    expr: "reco_muon_veto_fid40_no_protons & true_bkg_nonstop_muon"
  reco_muon_veto_fid40_no_protons_bkg_neutron:
    expr: "reco_muon_veto_fid40_no_protons & true_bkg_neutron"
  reco_muon_veto_fid40_no_protons_bkg_pion:
    expr: "reco_muon_veto_fid40_no_protons & true_bkg_pion"
  reco_muon_veto_fid40_no_protons_bkg_shower:
    expr: "reco_muon_veto_fid40_no_protons & true_bkg_shower"    
  reco_muon_veto_fid40_no_protons_bkg_other:
    expr: "reco_muon_veto_fid40_no_protons & true_bkg_other"

  reco_michel:
    expr: "reco_muon_veto & michel_cut"
  reco_michel_true_michel:
    expr: "reco_michel & true_michel"
  reco_michel_true_michel_plus:
    expr: "reco_michel & true_michel_plus"
  reco_michel_true_michel_minus:
    expr: "reco_michel & true_michel_minus"
  reco_michel_true_capt:
    expr: "reco_michel & true_capt"
  reco_michel_bkg_proton:
    expr: "reco_michel & true_bkg_proton"
  reco_michel_bkg_stop_proton:
    expr: "reco_michel & true_bkg_stop_proton"
  reco_michel_bkg_nonstop_proton:
    expr: "reco_michel & true_bkg_nonstop_proton"
  reco_michel_bkg_muon:
    expr: "reco_michel & true_bkg_muon"
  reco_michel_bkg_stop_muon:
    expr: "reco_michel & true_bkg_stop_muon"
  reco_michel_bkg_nonstop_muon:
    expr: "reco_michel & true_bkg_nonstop_muon"
  reco_michel_bkg_neutron:
    expr: "reco_michel & true_bkg_neutron"
  reco_michel_bkg_pion:
    expr: "reco_michel & true_bkg_pion"
  reco_michel_bkg_shower:
    expr: "reco_michel & true_bkg_shower"
  reco_michel_bkg_other:
    expr: "reco_michel & true_bkg_other"
  reco_michel_bkg:
    expr: "reco_michel & (true_bkg_other | true_bkg_shower | true_bkg_pion | true_bkg_neutron | true_bkg_muon | true_bkg_proton)"        

  reco_michel_nhit12:
    expr: "reco_muon_veto & michel_cut_nhit12"
  reco_michel_nhit12_true_michel:
    expr: "reco_michel_nhit12 & true_michel"
  reco_michel_nhit12_true_michel_plus:
    expr: "reco_michel_nhit12 & true_michel_plus"
  reco_michel_nhit12_true_michel_minus:
    expr: "reco_michel_nhit12 & true_michel_minus"
  reco_michel_nhit12_true_capt:
    expr: "reco_michel_nhit12 & true_capt"
  reco_michel_nhit12_bkg_proton:
    expr: "reco_michel_nhit12 & true_bkg_proton"
  reco_michel_nhit12_bkg_stop_proton:
    expr: "reco_michel_nhit12 & true_bkg_stop_proton"
  reco_michel_nhit12_bkg_nonstop_proton:
    expr: "reco_michel_nhit12 & true_bkg_nonstop_proton"
  reco_michel_nhit12_bkg_muon:
    expr: "reco_michel_nhit12 & true_bkg_muon"
  reco_michel_nhit12_bkg_stop_muon:
    expr: "reco_michel_nhit12 & true_bkg_stop_muon"
  reco_michel_nhit12_bkg_nonstop_muon:
    expr: "reco_michel_nhit12 & true_bkg_nonstop_muon"
  reco_michel_nhit12_bkg_neutron:
    expr: "reco_michel_nhit12 & true_bkg_neutron"
  reco_michel_nhit12_bkg_pion:
    expr: "reco_michel_nhit12 & true_bkg_pion"
  reco_michel_nhit12_bkg_shower:
    expr: "reco_michel_nhit12 & true_bkg_shower"
  reco_michel_nhit12_bkg_other:
    expr: "reco_michel_nhit12 & true_bkg_other"
  reco_michel_nhit12_bkg:
    expr: "reco_michel_nhit12 & (true_bkg_other | true_bkg_shower | true_bkg_pion | true_bkg_neutron | true_bkg_muon | true_bkg_proton)"

  reco_michel_nhit8:
    expr: "reco_muon_veto & michel_cut_nhit8"
  reco_michel_nhit8_true_michel:
    expr: "reco_michel_nhit8 & true_michel"
  reco_michel_nhit8_true_michel_plus:
    expr: "reco_michel_nhit8 & true_michel_plus"
  reco_michel_nhit8_true_michel_minus:
    expr: "reco_michel_nhit8 & true_michel_minus"
  reco_michel_nhit8_true_capt:
    expr: "reco_michel_nhit8 & true_capt"
  reco_michel_nhit8_bkg_proton:
    expr: "reco_michel_nhit8 & true_bkg_proton"
  reco_michel_nhit8_bkg_stop_proton:
    expr: "reco_michel_nhit8 & true_bkg_stop_proton"
  reco_michel_nhit8_bkg_nonstop_proton:
    expr: "reco_michel_nhit8 & true_bkg_nonstop_proton"
  reco_michel_nhit8_bkg_muon:
    expr: "reco_michel_nhit8 & true_bkg_muon"
  reco_michel_nhit8_bkg_stop_muon:
    expr: "reco_michel_nhit8 & true_bkg_stop_muon"
  reco_michel_nhit8_bkg_nonstop_muon:
    expr: "reco_michel_nhit8 & true_bkg_nonstop_muon"
  reco_michel_nhit8_bkg_neutron:
    expr: "reco_michel_nhit8 & true_bkg_neutron"
  reco_michel_nhit8_bkg_pion:
    expr: "reco_michel_nhit8 & true_bkg_pion"
  reco_michel_nhit8_bkg_shower:
    expr: "reco_michel_nhit8 & true_bkg_shower"
  reco_michel_nhit8_bkg_other:
    expr: "reco_michel_nhit8 & true_bkg_other"
  reco_michel_nhit8_bkg:
    expr: "reco_michel_nhit8 & (true_bkg_other | true_bkg_shower | true_bkg_pion | true_bkg_neutron | true_bkg_muon | true_bkg_proton)"

  reco_michel_light:
    expr: "reco_michel & light_cut & in_charge_ratio_time_window"
  reco_michel_light_top_half:
    expr: "reco_michel_light & top_half"
  reco_michel_light_bottom_half:
    expr: "reco_michel_light & bottom_half"
  reco_michel_light_50_100MeV:
    expr: "reco_michel_light & (muon_t < 100e3) & (muon_t > 50e3)"
  reco_michel_light_100_200MeV:
    expr: "reco_michel_light & (muon_t > 100e3) & (muon_t < 200e3)"
  reco_michel_light_200_300MeV:
    expr: "reco_michel_light & (muon_t > 200e3) & (muon_t < 300e3)"
  reco_michel_light_azi0:
    expr: "reco_michel_light & (muon_azi < -numpy.pi/2)"
  reco_michel_light_azi1:
    expr: "reco_michel_light & (muon_azi < 0) & (muon_azi > -numpy.pi/2)"
  reco_michel_light_azi2:
    expr: "reco_michel_light & (muon_azi < numpy.pi/2) & (muon_azi > 0)"
  reco_michel_light_azi3:
    expr: "reco_michel_light & (muon_azi > numpy.pi/2)"    
  reco_michel_light_true_michel:
    expr: "reco_michel_light & true_michel & ~poor_reco"
  reco_michel_light_true_michel_plus:
    expr: "reco_michel_light & true_michel_plus & ~poor_reco"
  reco_michel_light_true_michel_minus:
    expr: "reco_michel_light & true_michel_minus & ~poor_reco"
  reco_michel_light_poor_reco:
    expr: "reco_michel_light & true_michel & poor_reco"
  reco_michel_light_true_capt:
    expr: "reco_michel_light & true_capt"
  reco_michel_light_bkg_proton:
    expr: "reco_michel_light & true_bkg_proton"
  reco_michel_light_bkg_stop_proton:
    expr: "reco_michel_light & true_bkg_stop_proton"
  reco_michel_light_bkg_nonstop_proton:
    expr: "reco_michel_light & true_bkg_nonstop_proton"
  reco_michel_light_bkg_muon:
    expr: "reco_michel_light & true_bkg_muon"
  reco_michel_light_bkg_stop_muon:
    expr: "reco_michel_light & true_bkg_stop_muon"
  reco_michel_light_bkg_nonstop_muon:
    expr: "reco_michel_light & true_bkg_nonstop_muon"
  reco_michel_light_bkg_neutron:
    expr: "reco_michel_light & true_bkg_neutron"
  reco_michel_light_bkg_pion:
    expr: "reco_michel_light & true_bkg_pion"
  reco_michel_light_bkg_shower:
    expr: "reco_michel_light & true_bkg_shower"
  reco_michel_light_bkg_other:
    expr: "reco_michel_light & (true_bkg_other | (~true_michel & poor_reco & reco_michel_light))"
  reco_michel_light_bkg:
    expr: "reco_michel_light & (true_bkg_other | true_bkg_shower | true_bkg_pion | true_bkg_neutron | true_bkg_muon | true_bkg_proton | reco_michel_light_poor_reco)"

  reco_michel_light_50_100MeV:
    expr: "reco_michel_light & reco_muon_veto_50_100MeV & in_charge_ratio_time_window"
  reco_michel_light_50_100MeV_top_half:
    expr: "reco_michel_light_50_100MeV & in_charge_ratio_time_window & top_half"
  reco_michel_light_50_100MeV_bottom_half:
    expr: "reco_michel_light_50_100MeV & in_charge_ratio_time_window & bottom_half"
  reco_michel_light_50_100MeV_true_michel:
    expr: "reco_michel_light_50_100MeV & true_michel & ~poor_reco"
  reco_michel_light_50_100MeV_true_michel_plus:
    expr: "reco_michel_light_50_100MeV & true_michel_plus & ~poor_reco"
  reco_michel_light_50_100MeV_true_michel_minus:
    expr: "reco_michel_light_50_100MeV & true_michel_minus & ~poor_reco"
  reco_michel_light_50_100MeV_poor_reco:
    expr: "reco_michel_light_50_100MeV & true_michel & poor_reco"
  reco_michel_light_50_100MeV_true_capt:
    expr: "reco_michel_light_50_100MeV & true_capt"
  reco_michel_light_50_100MeV_bkg_proton:
    expr: "reco_michel_light_50_100MeV & true_bkg_proton"
  reco_michel_light_50_100MeV_bkg_stop_proton:
    expr: "reco_michel_lixght_50_100MeV & true_bkg_stop_proton"
  reco_michel_light_50_100MeV_bkg_nonstop_proton:
    expr: "reco_michel_light_50_100MeV & true_bkg_nonstop_proton"
  reco_michel_light_50_100MeV_bkg_muon:
    expr: "reco_michel_light_50_100MeV & true_bkg_muon"
  reco_michel_light_50_100MeV_bkg_stop_muon:
    expr: "reco_michel_light_50_100MeV & true_bkg_stop_muon"
  reco_michel_light_50_100MeV_bkg_nonstop_muon:
    expr: "reco_michel_light_50_100MeV & true_bkg_nonstop_muon"
  reco_michel_light_50_100MeV_bkg_neutron:
    expr: "reco_michel_light_50_100MeV & true_bkg_neutron"
  reco_michel_light_50_100MeV_bkg_pion:
    expr: "reco_michel_light_50_100MeV & true_bkg_pion"
  reco_michel_light_50_100MeV_bkg_shower:
    expr: "reco_michel_light_50_100MeV & true_bkg_shower"
  reco_michel_light_50_100MeV_bkg_other:
    expr: "reco_michel_light_50_100MeV & true_bkg_other"
  reco_michel_light_50_100MeV_bkg:
    expr: "reco_michel_light_50_100MeV & (true_bkg_other | true_bkg_shower | true_bkg_pion | true_bkg_neutron | true_bkg_muon | true_bkg_proton | reco_michel_light_50_100MeV_poor_reco)"

  reco_michel_light_100_200MeV:
    expr: "reco_michel_light & reco_muon_veto_100_200MeV & in_charge_ratio_time_window"
  reco_michel_light_100_200MeV_top_half:
    expr: "reco_michel_light_100_200MeV & in_charge_ratio_time_window & top_half"
  reco_michel_light_100_200MeV_bottom_half:
    expr: "reco_michel_light_100_200MeV & in_charge_ratio_time_window & bottom_half"
  reco_michel_light_100_200MeV_true_michel:
    expr: "reco_michel_light_100_200MeV & true_michel & ~poor_reco"
  reco_michel_light_100_200MeV_true_michel_plus:
    expr: "reco_michel_light_100_200MeV & true_michel_plus & ~poor_reco"
  reco_michel_light_100_200MeV_true_michel_minus:
    expr: "reco_michel_light_100_200MeV & true_michel_minus & ~poor_reco"
  reco_michel_light_100_200MeV_poor_reco:
    expr: "reco_michel_light_100_200MeV & true_michel & poor_reco"
  reco_michel_light_100_200MeV_true_capt:
    expr: "reco_michel_light_100_200MeV & true_capt"
  reco_michel_light_100_200MeV_bkg_proton:
    expr: "reco_michel_light_100_200MeV & true_bkg_proton"
  reco_michel_light_100_200MeV_bkg_stop_proton:
    expr: "reco_michel_lixght_100_200MeV & true_bkg_stop_proton"
  reco_michel_light_100_200MeV_bkg_nonstop_proton:
    expr: "reco_michel_light_100_200MeV & true_bkg_nonstop_proton"
  reco_michel_light_100_200MeV_bkg_muon:
    expr: "reco_michel_light_100_200MeV & true_bkg_muon"
  reco_michel_light_100_200MeV_bkg_stop_muon:
    expr: "reco_michel_light_100_200MeV & true_bkg_stop_muon"
  reco_michel_light_100_200MeV_bkg_nonstop_muon:
    expr: "reco_michel_light_100_200MeV & true_bkg_nonstop_muon"
  reco_michel_light_100_200MeV_bkg_neutron:
    expr: "reco_michel_light_100_200MeV & true_bkg_neutron"
  reco_michel_light_100_200MeV_bkg_pion:
    expr: "reco_michel_light_100_200MeV & true_bkg_pion"
  reco_michel_light_100_200MeV_bkg_shower:
    expr: "reco_michel_light_100_200MeV & true_bkg_shower"
  reco_michel_light_100_200MeV_bkg_other:
    expr: "reco_michel_light_100_200MeV & true_bkg_other"
  reco_michel_light_100_200MeV_bkg:
    expr: "reco_michel_light_100_200MeV & (true_bkg_other | true_bkg_shower | true_bkg_pion | true_bkg_neutron | true_bkg_muon | true_bkg_proton | reco_michel_light_100_200MeV_poor_reco)"

  reco_michel_light_200_300MeV:
    expr: "reco_michel_light & reco_muon_veto_200_300MeV & in_charge_ratio_time_window"
  reco_michel_light_200_300MeV_top_half:
    expr: "reco_michel_light_200_300MeV & in_charge_ratio_time_window & top_half"
  reco_michel_light_200_300MeV_bottom_half:
    expr: "reco_michel_light_200_300MeV & in_charge_ratio_time_window & bottom_half"
  reco_michel_light_200_300MeV_true_michel:
    expr: "reco_michel_light_200_300MeV & true_michel & ~poor_reco"
  reco_michel_light_200_300MeV_true_michel_plus:
    expr: "reco_michel_light_200_300MeV & true_michel_plus & ~poor_reco"
  reco_michel_light_200_300MeV_true_michel_minus:
    expr: "reco_michel_light_200_300MeV & true_michel_minus & ~poor_reco"
  reco_michel_light_200_300MeV_poor_reco:
    expr: "reco_michel_light_200_300MeV & true_michel & poor_reco"
  reco_michel_light_200_300MeV_true_capt:
    expr: "reco_michel_light_200_300MeV & true_capt"
  reco_michel_light_200_300MeV_bkg_proton:
    expr: "reco_michel_light_200_300MeV & true_bkg_proton"
  reco_michel_light_200_300MeV_bkg_stop_proton:
    expr: "reco_michel_lixght_200_300MeV & true_bkg_stop_proton"
  reco_michel_light_200_300MeV_bkg_nonstop_proton:
    expr: "reco_michel_light_200_300MeV & true_bkg_nonstop_proton"
  reco_michel_light_200_300MeV_bkg_muon:
    expr: "reco_michel_light_200_300MeV & true_bkg_muon"
  reco_michel_light_200_300MeV_bkg_stop_muon:
    expr: "reco_michel_light_200_300MeV & true_bkg_stop_muon"
  reco_michel_light_200_300MeV_bkg_nonstop_muon:
    expr: "reco_michel_light_200_300MeV & true_bkg_nonstop_muon"
  reco_michel_light_200_300MeV_bkg_neutron:
    expr: "reco_michel_light_200_300MeV & true_bkg_neutron"
  reco_michel_light_200_300MeV_bkg_pion:
    expr: "reco_michel_light_200_300MeV & true_bkg_pion"
  reco_michel_light_200_300MeV_bkg_shower:
    expr: "reco_michel_light_200_300MeV & true_bkg_shower"
  reco_michel_light_200_300MeV_bkg_other:
    expr: "reco_michel_light_200_300MeV & true_bkg_other"
  reco_michel_light_200_300MeV_bkg:
    expr: "reco_michel_light_200_300MeV & (true_bkg_other | true_bkg_shower | true_bkg_pion | true_bkg_neutron | true_bkg_muon | true_bkg_proton | reco_michel_light_200_300MeV_poor_reco)"

  reco_michel_light_sum50:
    expr: "reco_michel & light_cut_sum50 & in_charge_ratio_time_window"
  reco_michel_light_sum50_top_half:
    expr: "reco_michel_light_sum50 & in_charge_ratio_time_window & top_half"
  reco_michel_light_sum50_bottom_half:
    expr: "reco_michel_light_sum50 & in_charge_ratio_time_window & bottom_half"
  reco_michel_light_sum50_true_michel:
    expr: "reco_michel_light_sum50 & true_michel & ~poor_reco"
  reco_michel_light_sum50_true_michel_plus:
    expr: "reco_michel_light_sum50 & true_michel_plus & ~poor_reco"
  reco_michel_light_sum50_true_michel_minus:
    expr: "reco_michel_light_sum50 & true_michel_minus & ~poor_reco"
  reco_michel_light_sum50_poor_reco:
    expr: "reco_michel_light_sum50 & true_michel & poor_reco"
  reco_michel_light_sum50_true_capt:
    expr: "reco_michel_light_sum50 & true_capt"
  reco_michel_light_sum50_bkg_proton:
    expr: "reco_michel_light_sum50 & true_bkg_proton"
  reco_michel_light_sum50_bkg_stop_proton:
    expr: "reco_michel_lixght_sum50 & true_bkg_stop_proton"
  reco_michel_light_sum50_bkg_nonstop_proton:
    expr: "reco_michel_light_sum50 & true_bkg_nonstop_proton"
  reco_michel_light_sum50_bkg_muon:
    expr: "reco_michel_light_sum50 & true_bkg_muon"
  reco_michel_light_sum50_bkg_stop_muon:
    expr: "reco_michel_light_sum50 & true_bkg_stop_muon"
  reco_michel_light_sum50_bkg_nonstop_muon:
    expr: "reco_michel_light_sum50 & true_bkg_nonstop_muon"
  reco_michel_light_sum50_bkg_neutron:
    expr: "reco_michel_light_sum50 & true_bkg_neutron"
  reco_michel_light_sum50_bkg_pion:
    expr: "reco_michel_light_sum50 & true_bkg_pion"
  reco_michel_light_sum50_bkg_shower:
    expr: "reco_michel_light_sum50 & true_bkg_shower"
  reco_michel_light_sum50_bkg_other:
    expr: "reco_michel_light_sum50 & true_bkg_other"
  reco_michel_light_sum50_bkg:
    expr: "reco_michel_light_sum50 & (true_bkg_other | true_bkg_shower | true_bkg_pion | true_bkg_neutron | true_bkg_muon | true_bkg_proton | reco_michel_light_sum50_poor_reco)"

  reco_michel_light_sum60:
    expr: "reco_michel & light_cut_sum60 & in_charge_ratio_time_window"
  reco_michel_light_sum60_top_half:
    expr: "reco_michel_light_sum60 & in_charge_ratio_time_window & top_half"
  reco_michel_light_sum60_bottom_half:
    expr: "reco_michel_light_sum60 & in_charge_ratio_time_window & bottom_half"
  reco_michel_light_sum60_true_michel:
    expr: "reco_michel_light_sum60 & true_michel & ~poor_reco"
  reco_michel_light_sum60_true_michel_plus:
    expr: "reco_michel_light_sum60 & true_michel_plus & ~poor_reco"
  reco_michel_light_sum60_true_michel_minus:
    expr: "reco_michel_light_sum60 & true_michel_minus & ~poor_reco"
  reco_michel_light_sum60_poor_reco:
    expr: "reco_michel_light_sum60 & true_michel & poor_reco"
  reco_michel_light_sum60_true_capt:
    expr: "reco_michel_light_sum60 & true_capt"
  reco_michel_light_sum60_bkg_proton:
    expr: "reco_michel_light_sum60 & true_bkg_proton"
  reco_michel_light_sum60_bkg_stop_proton:
    expr: "reco_michel_light_sum60 & true_bkg_stop_proton"
  reco_michel_light_sum60_bkg_nonstop_proton:
    expr: "reco_michel_light_sum60 & true_bkg_nonstop_proton"
  reco_michel_light_sum60_bkg_muon:
    expr: "reco_michel_light_sum60 & true_bkg_muon"
  reco_michel_light_sum60_bkg_stop_muon:
    expr: "reco_michel_light_sum60 & true_bkg_stop_muon"
  reco_michel_light_sum60_bkg_nonstop_muon:
    expr: "reco_michel_light_sum60 & true_bkg_nonstop_muon"
  reco_michel_light_sum60_bkg_neutron:
    expr: "reco_michel_light_sum60 & true_bkg_neutron"
  reco_michel_light_sum60_bkg_pion:
    expr: "reco_michel_light_sum60 & true_bkg_pion"
  reco_michel_light_sum60_bkg_shower:
    expr: "reco_michel_light_sum60 & true_bkg_shower"
  reco_michel_light_sum60_bkg_other:
    expr: "reco_michel_light_sum60 & true_bkg_other"
  reco_michel_light_sum60_bkg:
    expr: "reco_michel_light_sum60 & (true_bkg_other | true_bkg_shower | true_bkg_pion | true_bkg_neutron | true_bkg_muon | true_bkg_proton | reco_michel_light_sum60_poor_reco)"

  reco_michel_light_yield20:
    expr: "reco_michel & light_cut_yield20 & in_charge_ratio_time_window"
  reco_michel_light_yield20_top_half:
    expr: "reco_michel_light_yield20 & in_charge_ratio_time_window & top_half"
  reco_michel_light_yield20_bottom_half:
    expr: "reco_michel_light_yield20 & in_charge_ratio_time_window & bottom_half"
  reco_michel_light_yield20_true_michel:
    expr: "reco_michel_light_yield20 & true_michel & ~poor_reco"
  reco_michel_light_yield20_true_michel_plus:
    expr: "reco_michel_light_yield20 & true_michel_plus & ~poor_reco"
  reco_michel_light_yield20_true_michel_minus:
    expr: "reco_michel_light_yield20 & true_michel_minus & ~poor_reco"
  reco_michel_light_yield20_poor_reco:
    expr: "reco_michel_light_yield20 & true_michel & poor_reco"
  reco_michel_light_yield20_true_capt:
    expr: "reco_michel_light_yield20 & true_capt"
  reco_michel_light_yield20_bkg_proton:
    expr: "reco_michel_light_yield20 & true_bkg_proton"
  reco_michel_light_yield20_bkg_stop_proton:
    expr: "reco_michel_light_yield20 & true_bkg_stop_proton"
  reco_michel_light_yield20_bkg_nonstop_proton:
    expr: "reco_michel_light_yield20 & true_bkg_nonstop_proton"
  reco_michel_light_yield20_bkg_muon:
    expr: "reco_michel_light_yield20 & true_bkg_muon"
  reco_michel_light_yield20_bkg_stop_muon:
    expr: "reco_michel_light_yield20 & true_bkg_stop_muon"
  reco_michel_light_yield20_bkg_nonstop_muon:
    expr: "reco_michel_light_yield20 & true_bkg_nonstop_muon"
  reco_michel_light_yield20_bkg_neutron:
    expr: "reco_michel_light_yield20 & true_bkg_neutron"
  reco_michel_light_yield20_bkg_pion:
    expr: "reco_michel_light_yield20 & true_bkg_pion"
  reco_michel_light_yield20_bkg_shower:
    expr: "reco_michel_light_yield20 & true_bkg_shower"
  reco_michel_light_yield20_bkg_other:
    expr: "reco_michel_light_yield20 & true_bkg_other"
  reco_michel_light_yield20_bkg:
    expr: "reco_michel_light_yield20 & (true_bkg_other | true_bkg_shower | true_bkg_pion | true_bkg_neutron | true_bkg_muon | true_bkg_proton | reco_michel_light_yield20_poor_reco)"

  reco_michel_light_yield10:
    expr: "reco_michel & light_cut_yield10 & in_charge_ratio_time_window"
  reco_michel_light_yield10_top_half:
    expr: "reco_michel_light_yield10 & in_charge_ratio_time_window & top_half"
  reco_michel_light_yield10_bottom_half:
    expr: "reco_michel_light_yield10 & in_charge_ratio_time_window & bottom_half"
  reco_michel_light_yield10_true_michel:
    expr: "reco_michel_light_yield10 & true_michel & ~poor_reco"
  reco_michel_light_yield10_true_michel_plus:
    expr: "reco_michel_light_yield10 & true_michel_plus & ~poor_reco"
  reco_michel_light_yield10_true_michel_minus:
    expr: "reco_michel_light_yield10 & true_michel_minus & ~poor_reco"
  reco_michel_light_yield10_poor_reco:
    expr: "reco_michel_light_yield10 & true_michel & poor_reco"
  reco_michel_light_yield10_true_capt:
    expr: "reco_michel_light_yield10 & true_capt"
  reco_michel_light_yield10_bkg_proton:
    expr: "reco_michel_light_yield10 & true_bkg_proton"
  reco_michel_light_yield10_bkg_stop_proton:
    expr: "reco_michel_light_yield10 & true_bkg_stop_proton"
  reco_michel_light_yield10_bkg_nonstop_proton:
    expr: "reco_michel_light_yield10 & true_bkg_nonstop_proton"
  reco_michel_light_yield10_bkg_muon:
    expr: "reco_michel_light_yield10 & true_bkg_muon"
  reco_michel_light_yield10_bkg_stop_muon:
    expr: "reco_michel_light_yield10 & true_bkg_stop_muon"
  reco_michel_light_yield10_bkg_nonstop_muon:
    expr: "reco_michel_light_yield10 & true_bkg_nonstop_muon"
  reco_michel_light_yield10_bkg_neutron:
    expr: "reco_michel_light_yield10 & true_bkg_neutron"
  reco_michel_light_yield10_bkg_pion:
    expr: "reco_michel_light_yield10 & true_bkg_pion"
  reco_michel_light_yield10_bkg_shower:
    expr: "reco_michel_light_yield10 & true_bkg_shower"
  reco_michel_light_yield10_bkg_other:
    expr: "reco_michel_light_yield10 & true_bkg_other"
  reco_michel_light_yield10_bkg:
    expr: "reco_michel_light_yield10 & (true_bkg_other | true_bkg_shower | true_bkg_pion | true_bkg_neutron | true_bkg_muon | true_bkg_proton | reco_michel_light_yield10_poor_reco)"

  reco_michel_light_nhit12:
    expr: "reco_michel_nhit12 & light_cut & in_charge_ratio_time_window"
  reco_michel_light_nhit12_top_half:
    expr: "reco_michel_light_nhit12 & in_charge_ratio_time_window & top_half"
  reco_michel_light_nhit12_bottom_half:
    expr: "reco_michel_light_nhit12 & in_charge_ratio_time_window & bottom_half"
  reco_michel_light_nhit12_true_michel:
    expr: "reco_michel_light_nhit12 & true_michel & ~poor_reco"
  reco_michel_light_nhit12_true_michel_plus:
    expr: "reco_michel_light_nhit12 & true_michel_plus & ~poor_reco"
  reco_michel_light_nhit12_true_michel_minus:
    expr: "reco_michel_light_nhit12 & true_michel_minus & ~poor_reco"
  reco_michel_light_nhit12_poor_reco:
    expr: "reco_michel_light_nhit12 & true_michel & poor_reco"
  reco_michel_light_nhit12_true_capt:
    expr: "reco_michel_light_nhit12 & true_capt"
  reco_michel_light_nhit12_bkg_proton:
    expr: "reco_michel_light_nhit12 & true_bkg_proton"
  reco_michel_light_nhit12_bkg_stop_proton:
    expr: "reco_michel_light_nhit12 & true_bkg_stop_proton"
  reco_michel_light_nhit12_bkg_nonstop_proton:
    expr: "reco_michel_light_nhit12 & true_bkg_nonstop_proton"
  reco_michel_light_nhit12_bkg_muon:
    expr: "reco_michel_light_nhit12 & true_bkg_muon"
  reco_michel_light_nhit12_bkg_stop_muon:
    expr: "reco_michel_light_nhit12 & true_bkg_stop_muon"
  reco_michel_light_nhit12_bkg_nonstop_muon:
    expr: "reco_michel_light_nhit12 & true_bkg_nonstop_muon"
  reco_michel_light_nhit12_bkg_neutron:
    expr: "reco_michel_light_nhit12 & true_bkg_neutron"
  reco_michel_light_nhit12_bkg_pion:
    expr: "reco_michel_light_nhit12 & true_bkg_pion"
  reco_michel_light_nhit12_bkg_shower:
    expr: "reco_michel_light_nhit12 & true_bkg_shower"
  reco_michel_light_nhit12_bkg_other:
    expr: "reco_michel_light_nhit12 & true_bkg_other"
  reco_michel_light_nhit12_bkg:
    expr: "reco_michel_light_nhit12 & (true_bkg_other | true_bkg_shower | true_bkg_pion | true_bkg_neutron | true_bkg_muon | true_bkg_proton | reco_michel_light_nhit12_poor_reco)"

  reco_michel_light_nhit8:
    expr: "reco_michel_nhit8 & light_cut & in_charge_ratio_time_window"
  reco_michel_light_nhit8_top_half:
    expr: "reco_michel_light_nhit8 & in_charge_ratio_time_window & top_half"
  reco_michel_light_nhit8_bottom_half:
    expr: "reco_michel_light_nhit8 & in_charge_ratio_time_window & bottom_half"
  reco_michel_light_nhit8_true_michel:
    expr: "reco_michel_light_nhit8 & true_michel & ~poor_reco"
  reco_michel_light_nhit8_true_michel_plus:
    expr: "reco_michel_light_nhit8 & true_michel_plus & ~poor_reco"
  reco_michel_light_nhit8_true_michel_minus:
    expr: "reco_michel_light_nhit8 & true_michel_minus & ~poor_reco"
  reco_michel_light_nhit8_poor_reco:
    expr: "reco_michel_light_nhit8 & true_michel & poor_reco"
  reco_michel_light_nhit8_true_capt:
    expr: "reco_michel_light_nhit8 & true_capt"
  reco_michel_light_nhit8_bkg_proton:
    expr: "reco_michel_light_nhit8 & true_bkg_proton"
  reco_michel_light_nhit8_bkg_stop_proton:
    expr: "reco_michel_light_nhit8 & true_bkg_stop_proton"
  reco_michel_light_nhit8_bkg_nonstop_proton:
    expr: "reco_michel_light_nhit8 & true_bkg_nonstop_proton"
  reco_michel_light_nhit8_bkg_muon:
    expr: "reco_michel_light_nhit8 & true_bkg_muon"
  reco_michel_light_nhit8_bkg_stop_muon:
    expr: "reco_michel_light_nhit8 & true_bkg_stop_muon"
  reco_michel_light_nhit8_bkg_nonstop_muon:
    expr: "reco_michel_light_nhit8 & true_bkg_nonstop_muon"
  reco_michel_light_nhit8_bkg_neutron:
    expr: "reco_michel_light_nhit8 & true_bkg_neutron"
  reco_michel_light_nhit8_bkg_pion:
    expr: "reco_michel_light_nhit8 & true_bkg_pion"
  reco_michel_light_nhit8_bkg_shower:
    expr: "reco_michel_light_nhit8 & true_bkg_shower"
  reco_michel_light_nhit8_bkg_other:
    expr: "reco_michel_light_nhit8 & true_bkg_other"
  reco_michel_light_nhit8_bkg:
    expr: "reco_michel_light_nhit8 & (true_bkg_other | true_bkg_shower | true_bkg_pion | true_bkg_neutron | true_bkg_muon | true_bkg_proton | reco_michel_light_nhit8_poor_reco)"
    
  reco_michel_light_fid60:
    expr: "reco_michel & light_cut & in_charge_ratio_time_window & fid_cut_60"
  reco_michel_light_fid60_top_half:
    expr: "reco_michel_light_fid60 & in_charge_ratio_time_window & top_half"
  reco_michel_light_fid60_bottom_half:
    expr: "reco_michel_light_fid60 & in_charge_ratio_time_window & bottom_half"
  reco_michel_light_fid60_true_michel:
    expr: "reco_michel_light_fid60 & true_michel & ~poor_reco"
  reco_michel_light_fid60_true_michel_plus:
    expr: "reco_michel_light_fid60 & true_michel_plus & ~poor_reco"
  reco_michel_light_fid60_true_michel_minus:
    expr: "reco_michel_light_fid60 & true_michel_minus & ~poor_reco"
  reco_michel_light_fid60_poor_reco:
    expr: "reco_michel_light_fid60 & true_michel & poor_reco"
  reco_michel_light_fid60_true_capt:
    expr: "reco_michel_light_fid60 & true_capt"
  reco_michel_light_fid60_bkg_proton:
    expr: "reco_michel_light_fid60 & true_bkg_proton"
  reco_michel_light_fid60_bkg_stop_proton:
    expr: "reco_michel_light_fid60 & true_bkg_stop_proton"
  reco_michel_light_fid60_bkg_nonstop_proton:
    expr: "reco_michel_light_fid60 & true_bkg_nonstop_proton"
  reco_michel_light_fid60_bkg_muon:
    expr: "reco_michel_light_fid60 & true_bkg_muon"
  reco_michel_light_fid60_bkg_stop_muon:
    expr: "reco_michel_light_fid60 & true_bkg_stop_muon"
  reco_michel_light_fid60_bkg_nonstop_muon:
    expr: "reco_michel_light_fid60 & true_bkg_nonstop_muon"
  reco_michel_light_fid60_bkg_neutron:
    expr: "reco_michel_light_fid60 & true_bkg_neutron"
  reco_michel_light_fid60_bkg_pion:
    expr: "reco_michel_light_fid60 & true_bkg_pion"
  reco_michel_light_fid60_bkg_shower:
    expr: "reco_michel_light_fid60 & true_bkg_shower"
  reco_michel_light_fid60_bkg_other:
    expr: "reco_michel_light_fid60 & true_bkg_other"
  reco_michel_light_fid60_bkg:
    expr: "reco_michel_light_fid60 & (true_bkg_other | true_bkg_shower | true_bkg_pion | true_bkg_neutron | true_bkg_muon | true_bkg_proton | reco_michel_light_fid60_poor_reco)"
    
  reco_michel_light_fid40:
    expr: "reco_michel & light_cut & in_charge_ratio_time_window & fid_cut_40"
  reco_michel_light_fid40_top_half:
    expr: "reco_michel_light_fid40 & in_charge_ratio_time_window & top_half"
  reco_michel_light_fid40_bottom_half:
    expr: "reco_michel_light_fid40 & in_charge_ratio_time_window & bottom_half"
  reco_michel_light_fid40_true_michel:
    expr: "reco_michel_light_fid40 & true_michel & ~poor_reco"
  reco_michel_light_fid40_true_michel_plus:
    expr: "reco_michel_light_fid40 & true_michel_plus & ~poor_reco"
  reco_michel_light_fid40_true_michel_minus:
    expr: "reco_michel_light_fid40 & true_michel_minus & ~poor_reco"
  reco_michel_light_fid40_poor_reco:
    expr: "reco_michel_light_fid40 & true_michel & poor_reco"
  reco_michel_light_fid40_true_capt:
    expr: "reco_michel_light_fid40 & true_capt"
  reco_michel_light_fid40_bkg_proton:
    expr: "reco_michel_light_fid40 & true_bkg_proton"
  reco_michel_light_fid40_bkg_stop_proton:
    expr: "reco_michel_light_fid40 & true_bkg_stop_proton"
  reco_michel_light_fid40_bkg_nonstop_proton:
    expr: "reco_michel_light_fid40 & true_bkg_nonstop_proton"
  reco_michel_light_fid40_bkg_muon:
    expr: "reco_michel_light_fid40 & true_bkg_muon"
  reco_michel_light_fid40_bkg_stop_muon:
    expr: "reco_michel_light_fid40 & true_bkg_stop_muon"
  reco_michel_light_fid40_bkg_nonstop_muon:
    expr: "reco_michel_light_fid40 & true_bkg_nonstop_muon"
  reco_michel_light_fid40_bkg_neutron:
    expr: "reco_michel_light_fid40 & true_bkg_neutron"
  reco_michel_light_fid40_bkg_pion:
    expr: "reco_michel_light_fid40 & true_bkg_pion"
  reco_michel_light_fid40_bkg_shower:
    expr: "reco_michel_light_fid40 & true_bkg_shower"
  reco_michel_light_fid40_bkg_other:
    expr: "reco_michel_light_fid40 & true_bkg_other"
  reco_michel_light_fid40_bkg:
    expr: "reco_michel_light_fid40 & (true_bkg_other | true_bkg_shower | true_bkg_pion | true_bkg_neutron | true_bkg_muon | true_bkg_proton | reco_michel_light_fid40_poor_reco)"

  reco_michel_plus_light:
    expr: "reco_michel & light_cut & in_michel_plus_time_window"
  reco_michel_plus_light_true_michel:
    expr: "reco_michel_plus_light & true_michel & ~poor_reco"
  reco_michel_plus_light_true_michel_plus:
    expr: "reco_michel_plus_light & true_michel_plus & ~poor_reco"
  reco_michel_plus_light_true_michel_minus:
    expr: "reco_michel_plus_light & true_michel_minus & ~poor_reco"
  reco_michel_plus_light_poor_reco:
    expr: "reco_michel_plus_light & true_michel & poor_reco"
  reco_michel_plus_light_true_capt:
    expr: "reco_michel_plus_light & true_capt"
  reco_michel_plus_light_bkg_proton:
    expr: "reco_michel_plus_light & true_bkg_proton"
  reco_michel_plus_light_bkg_stop_proton:
    expr: "reco_michel_plus_light & true_bkg_stop_proton"
  reco_michel_plus_light_bkg_nonstop_proton:
    expr: "reco_michel_plus_light & true_bkg_nonstop_proton"
  reco_michel_plus_light_bkg_muon:
    expr: "reco_michel_plus_light & true_bkg_muon"
  reco_michel_plus_light_bkg_stop_muon:
    expr: "reco_michel_plus_light & true_bkg_stop_muon"
  reco_michel_plus_light_bkg_nonstop_muon:
    expr: "reco_michel_plus_light & true_bkg_nonstop_muon"
  reco_michel_plus_light_bkg_neutron:
    expr: "reco_michel_plus_light & true_bkg_neutron"
  reco_michel_plus_light_bkg_pion:
    expr: "reco_michel_plus_light & true_bkg_pion"
  reco_michel_plus_light_bkg_shower:
    expr: "reco_michel_plus_light & true_bkg_shower"
  reco_michel_plus_light_bkg_other:
    expr: "reco_michel_plus_light & true_bkg_other"

  mip_sideband_light:
    expr: "mip_sideband & light_cut & in_charge_ratio_time_window"
  mip_sideband_light_true_michel:
    expr: "mip_sideband_light & true_michel & ~poor_reco"
  mip_sideband_light_true_michel_plus:
    expr: "mip_sideband_light & true_michel_plus & ~poor_reco"
  mip_sideband_light_true_michel_minus:
    expr: "mip_sideband_light & true_michel_minus & ~poor_reco"
  mip_sideband_light_poor_reco:
    expr: "mip_sideband_light & true_michel & poor_reco"
  mip_sideband_light_true_capt:
    expr: "mip_sideband_light & true_capt"
  mip_sideband_light_bkg_proton:
    expr: "mip_sideband_light & true_bkg_proton"
  mip_sideband_light_bkg_stop_proton:
    expr: "mip_sideband_light & true_bkg_stop_proton"
  mip_sideband_light_bkg_nonstop_proton:
    expr: "mip_sideband_light & true_bkg_nonstop_proton"
  mip_sideband_light_bkg_muon:
    expr: "mip_sideband_light & true_bkg_muon"
  mip_sideband_light_bkg_stop_muon:
    expr: "mip_sideband_light & true_bkg_stop_muon"
  mip_sideband_light_bkg_nonstop_muon:
    expr: "mip_sideband_light & true_bkg_nonstop_muon"
  mip_sideband_light_bkg_neutron:
    expr: "mip_sideband_light & true_bkg_neutron"
  mip_sideband_light_bkg_pion:
    expr: "mip_sideband_light & true_bkg_pion"
  mip_sideband_light_bkg_shower:
    expr: "mip_sideband_light & true_bkg_shower"
  mip_sideband_light_bkg_other:
    expr: "mip_sideband_light & true_bkg_other"

  mip_sideband_light_sum50:
    expr: "mip_sideband & light_cut_sum50 & in_charge_ratio_time_window"
  mip_sideband_light_sum50_true_michel:
    expr: "mip_sideband_light_sum50 & true_michel & ~poor_reco"
  mip_sideband_light_sum50_true_michel_plus:
    expr: "mip_sideband_light_sum50 & true_michel_plus & ~poor_reco"
  mip_sideband_light_sum50_true_michel_minus:
    expr: "mip_sideband_light_sum50 & true_michel_minus & ~poor_reco"
  mip_sideband_light_sum50_poor_reco:
    expr: "mip_sideband_light_sum50 & true_michel & poor_reco"
  mip_sideband_light_sum50_true_capt:
    expr: "mip_sideband_light_sum50 & true_capt"
  mip_sideband_light_sum50_bkg_proton:
    expr: "mip_sideband_light_sum50 & true_bkg_proton"
  mip_sideband_light_sum50_bkg_stop_proton:
    expr: "mip_sideband_light_sum50 & true_bkg_stop_proton"
  mip_sideband_light_sum50_bkg_nonstop_proton:
    expr: "mip_sideband_light_sum50 & true_bkg_nonstop_proton"
  mip_sideband_light_sum50_bkg_muon:
    expr: "mip_sideband_light_sum50 & true_bkg_muon"
  mip_sideband_light_sum50_bkg_stop_muon:
    expr: "mip_sideband_light_sum50 & true_bkg_stop_muon"
  mip_sideband_light_sum50_bkg_nonstop_muon:
    expr: "mip_sideband_light_sum50 & true_bkg_nonstop_muon"
  mip_sideband_light_sum50_bkg_neutron:
    expr: "mip_sideband_light_sum50 & true_bkg_neutron"
  mip_sideband_light_sum50_bkg_pion:
    expr: "mip_sideband_light_sum50 & true_bkg_pion"
  mip_sideband_light_sum50_bkg_shower:
    expr: "mip_sideband_light_sum50 & true_bkg_shower"
  mip_sideband_light_sum50_bkg_other:
    expr: "mip_sideband_light_sum50 & true_bkg_other"

  mip_sideband_light_sum60:
    expr: "mip_sideband & light_cut_sum60 & in_charge_ratio_time_window"
  mip_sideband_light_sum60_true_michel:
    expr: "mip_sideband_light_sum60 & true_michel & ~poor_reco"
  mip_sideband_light_sum60_true_michel_plus:
    expr: "mip_sideband_light_sum60 & true_michel_plus & ~poor_reco"
  mip_sideband_light_sum60_true_michel_minus:
    expr: "mip_sideband_light_sum60 & true_michel_minus & ~poor_reco"
  mip_sideband_light_sum60_poor_reco:
    expr: "mip_sideband_light_sum60 & true_michel & poor_reco"
  mip_sideband_light_sum60_true_capt:
    expr: "mip_sideband_light_sum60 & true_capt"
  mip_sideband_light_sum60_bkg_proton:
    expr: "mip_sideband_light_sum60 & true_bkg_proton"
  mip_sideband_light_sum60_bkg_stop_proton:
    expr: "mip_sideband_light_sum60 & true_bkg_stop_proton"
  mip_sideband_light_sum60_bkg_nonstop_proton:
    expr: "mip_sideband_light_sum60 & true_bkg_nonstop_proton"
  mip_sideband_light_sum60_bkg_muon:
    expr: "mip_sideband_light_sum60 & true_bkg_muon"
  mip_sideband_light_sum60_bkg_stop_muon:
    expr: "mip_sideband_light_sum60 & true_bkg_stop_muon"
  mip_sideband_light_sum60_bkg_nonstop_muon:
    expr: "mip_sideband_light_sum60 & true_bkg_nonstop_muon"
  mip_sideband_light_sum60_bkg_neutron:
    expr: "mip_sideband_light_sum60 & true_bkg_neutron"
  mip_sideband_light_sum60_bkg_pion:
    expr: "mip_sideband_light_sum60 & true_bkg_pion"
  mip_sideband_light_sum60_bkg_shower:
    expr: "mip_sideband_light_sum60 & true_bkg_shower"
  mip_sideband_light_sum60_bkg_other:
    expr: "mip_sideband_light_sum60 & true_bkg_other"

  mip_sideband_light_yield10:
    expr: "mip_sideband & light_cut_yield10 & in_charge_ratio_time_window"
  mip_sideband_light_yield10_true_michel:
    expr: "mip_sideband_light_yield10 & true_michel & ~poor_reco"
  mip_sideband_light_yield10_true_michel_plus:
    expr: "mip_sideband_light_yield10 & true_michel_plus & ~poor_reco"
  mip_sideband_light_yield10_true_michel_minus:
    expr: "mip_sideband_light_yield10 & true_michel_minus & ~poor_reco"
  mip_sideband_light_yield10_poor_reco:
    expr: "mip_sideband_light_yield10 & true_michel & poor_reco"
  mip_sideband_light_yield10_true_capt:
    expr: "mip_sideband_light_yield10 & true_capt"
  mip_sideband_light_yield10_bkg_proton:
    expr: "mip_sideband_light_yield10 & true_bkg_proton"
  mip_sideband_light_yield10_bkg_stop_proton:
    expr: "mip_sideband_light_yield10 & true_bkg_stop_proton"
  mip_sideband_light_yield10_bkg_nonstop_proton:
    expr: "mip_sideband_light_yield10 & true_bkg_nonstop_proton"
  mip_sideband_light_yield10_bkg_muon:
    expr: "mip_sideband_light_yield10 & true_bkg_muon"
  mip_sideband_light_yield10_bkg_stop_muon:
    expr: "mip_sideband_light_yield10 & true_bkg_stop_muon"
  mip_sideband_light_yield10_bkg_nonstop_muon:
    expr: "mip_sideband_light_yield10 & true_bkg_nonstop_muon"
  mip_sideband_light_yield10_bkg_neutron:
    expr: "mip_sideband_light_yield10 & true_bkg_neutron"
  mip_sideband_light_yield10_bkg_pion:
    expr: "mip_sideband_light_yield10 & true_bkg_pion"
  mip_sideband_light_yield10_bkg_shower:
    expr: "mip_sideband_light_yield10 & true_bkg_shower"
  mip_sideband_light_yield10_bkg_other:
    expr: "mip_sideband_light_yield10 & true_bkg_other"

  mip_sideband_light_yield20:
    expr: "mip_sideband & light_cut_yield20 & in_charge_ratio_time_window"
  mip_sideband_light_yield20_true_michel:
    expr: "mip_sideband_light_yield20 & true_michel & ~poor_reco"
  mip_sideband_light_yield20_true_michel_plus:
    expr: "mip_sideband_light_yield20 & true_michel_plus & ~poor_reco"
  mip_sideband_light_yield20_true_michel_minus:
    expr: "mip_sideband_light_yield20 & true_michel_minus & ~poor_reco"
  mip_sideband_light_yield20_poor_reco:
    expr: "mip_sideband_light_yield20 & true_michel & poor_reco"
  mip_sideband_light_yield20_true_capt:
    expr: "mip_sideband_light_yield20 & true_capt"
  mip_sideband_light_yield20_bkg_proton:
    expr: "mip_sideband_light_yield20 & true_bkg_proton"
  mip_sideband_light_yield20_bkg_stop_proton:
    expr: "mip_sideband_light_yield20 & true_bkg_stop_proton"
  mip_sideband_light_yield20_bkg_nonstop_proton:
    expr: "mip_sideband_light_yield20 & true_bkg_nonstop_proton"
  mip_sideband_light_yield20_bkg_muon:
    expr: "mip_sideband_light_yield20 & true_bkg_muon"
  mip_sideband_light_yield20_bkg_stop_muon:
    expr: "mip_sideband_light_yield20 & true_bkg_stop_muon"
  mip_sideband_light_yield20_bkg_nonstop_muon:
    expr: "mip_sideband_light_yield20 & true_bkg_nonstop_muon"
  mip_sideband_light_yield20_bkg_neutron:
    expr: "mip_sideband_light_yield20 & true_bkg_neutron"
  mip_sideband_light_yield20_bkg_pion:
    expr: "mip_sideband_light_yield20 & true_bkg_pion"
  mip_sideband_light_yield20_bkg_shower:
    expr: "mip_sideband_light_yield20 & true_bkg_shower"
  mip_sideband_light_yield20_bkg_other:
    expr: "mip_sideband_light_yield20 & true_bkg_other"
    
  hand_scan0:
    expr: "reco_muon_veto & (tagged_nhit >= 8) & (tagged_nhit < 14)"
  hand_scan1:
    expr: "reco_michel_light & (delayed_time >= 1600) & (delayed_time <= 1640)"
  hand_scan2:
    expr: "reco_muon_veto & (tagged_nhit >= 8) & (tagged_nhit < 14) & (muon_t < 100e3) & (reco_muon_veto_bkg_proton | reco_muon_veto_bkg_muon | reco_muon_veto_bkg_neutron | reco_muon_veto_bkg_pion | reco_muon_veto_bkg_other)"
  hand_scan3:
    expr: "reco_michel_light & (delayed_time >= 2000) & (delayed_time <= 2040)"
  hand_scan4:
    expr: "reco_muon_veto & (stop_z < 0) & (stop_x > 0) & (stop_y > -220) & (stop_y < -190)"
  hand_scan5:
    expr: "true_michel & angle_veto"
  hand_scan6: # events rejected due to downward direction
    expr: "(true_michel | true_capt) & ~reco_muon_veto"
  hand_scan7: # excess/missing events in run 2 TPC 2 => due to bad readout UARTs in some runs
    expr: "reco_muon_veto & (stop_z > 0) & (stop_y > -370) & (stop_y < -150)"
  hand_scan8: # abnormal prompt vs delayed light signals
    expr: "reco_muon_veto & (prompt_ampl > 0) & (delayed_sum > 200) & (prompt_ampl < 0.1 * delayed_sum)"
  hand_scan9: # excess low prompt acceptance events in data
    expr: "(prompt_acc == 0) & reco_muon_veto"
  short_stopping_michel: # short events with a delayed light signal present
    expr: "reco_muon_veto & light_cut & in_michel_plus_time_window & (muon_range < 100)"
  hand_scan_bkg_proton:
    expr: "reco_muon_veto_bkg_proton"
  hand_scan_bkg_muon:
    expr: "reco_muon_veto_bkg_muon"
  hand_scan_bkg_neutron:
    expr: "reco_muon_veto_bkg_neutron"
  hand_scan_bkg_pion:
    expr: "reco_muon_veto_bkg_pion"
  hand_scan_bkg_shower:
    expr: "reco_muon_veto_bkg_shower"
  hand_scan_bkg_other:
    expr: "reco_muon_veto_bkg_other"